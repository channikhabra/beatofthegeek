<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Debian | Beat of The Geek]]></title>
  <link href="http://beatofthegeek.com/blog/categories/debian/atom.xml" rel="self"/>
  <link href="http://beatofthegeek.com/"/>
  <updated>2014-02-20T17:47:08+05:30</updated>
  <id>http://beatofthegeek.com/</id>
  <author>
    <name><![CDATA[Charanjit Singh]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Setting up your own home LAMP machine for PHP development -Setting Apache]]></title>
    <link href="http://beatofthegeek.com/2012/06/setting-up-you-own-home-lamp-machine.html"/>
    <updated>2012-06-30T00:00:00+05:30</updated>
    <id>http://beatofthegeek.com/2012/06/setting-up-you-own-home-lamp-machine</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on"><div style="text-align: justify;">Hello there!!</div><div style="text-align: justify;">Well am back here after a long time. Writing blog posts is really boring when you have something as awesome as writing code, and writing code for web applications is what is red hot in the skies right now. So here's this post to help us setting up our own LAMP (Linux - which all of us already have, Apache - the HTTP server, MySql - the Database Management System, and PHP - the sexy thing we'll write our web apps in).&nbsp;</div><table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: right; margin-left: 1em; text-align: right;"><tbody><tr><td style="text-align: center;"><a href="http://www.ezeelive.com/cmsAdmin/uploads/php_web_developer_mumbai_india_ezeelive.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="225" src="http://www.ezeelive.com/cmsAdmin/uploads/php_web_developer_mumbai_india_ezeelive.png" width="320" /></a></td></tr><tr><td class="tr-caption" style="text-align: center;">Php Development in Linux</td></tr></tbody></table><div style="text-align: justify;">Yea I know it is dead easy to just use the <a href="http://sourceforge.net/projects/lampas/" target="_blank">LAMP</a> (like people use <a href="http://www.wampserver.com/en/" target="_blank">WAMP</a> on <a href="http://forums.opensuse.org/english/other-forums/community-fun/general-chit-chat/461353-10-reasons-why-windows-still-sucks.html" target="_blank">Windows</a>), but what's the meaning of using something as awesome as Linux if we are gonna use those tools<span style="background-color: white;">(no offenses here)</span><span style="background-color: white;">. I hate using LAMP anyways.</span></div><div style="text-align: justify;"><span style="background-color: white;">So what we gonna do is installing Apache, Mysql and PHP on our machine and setting it up for awesome developing PHP apps.</span></div><!-- more --><br /><h3 style="text-align: justify;">   <span style="background-color: white;">Installing Apache</span></h3><div style="text-align: justify;"><span style="background-color: white;">Well, it can't be done easier on our Ubuntu Machine.</span></div><blockquote class="tr_bq" style="text-align: justify;"><span style="background-color: white;"><code>sudo apt-get install apache2</code></span></blockquote><div style="text-align: justify;">Installing apache is easy enough, but I don't think we gonna use our machine for web development all the time, are we? By default apache puts itself into the startup applications list, i.e. it starts up everytime we boot up. That's a kind of overkill for our development environment. But it is easy to remove it from startup.</div><h4 style="text-align: justify;">   Removing Apache from Startup</h4><div style="text-align: justify;">Just launch the terminal console (alt+ctrl+T on Gnome) and execute the following command</div><blockquote class="tr_bq" style="text-align: justify;"><code>sudo update-rc.d apache2 disable</code></blockquote><div style="text-align: justify;">Now Apache will not start on the startup. We'll need to start it manually everytime we gonna use it. Just use following command to <b>start apache http server:</b>&nbsp;</div><blockquote class="tr_bq" style="text-align: justify;"><code>sudo /etc/init.d/apache2 start</code> OR<span style="background-color: white;">&nbsp;</span></blockquote><blockquote class="tr_bq" style="text-align: justify;"><code>sudo service apache2 start</code></blockquote><h4 style="text-align: justify;">   Changing www (default directory) in Apache</h4><div style="text-align: justify;">By default Http server runs and show those files in <i>http:/localhost </i>which are located in the /var/www directory. But many times we need to change that directory to something else like ~/www or anything so as to run the server with that site as root.&nbsp;</div><div style="text-align: justify;">To achieve this in apache, we need to follow these steps:</div><br /><ul style="text-align: left;"><li style="text-align: justify;">Go to <i>/etc/apache2/sites-available</i> directory</li><li><div style="text-align: justify;"><span style="background-color: white;">Copy the file named </span><i style="background-color: white;">default </i><span style="background-color: white;">into the same (</span><i style="background-color: white;">/etc/apache2/sites-available</i><span style="background-color: white;">) directory and rename it to whatever (say 'www' this time) OR use this command via terminal</span></div><span style="background-color: white;"><div style="text-align: justify;"><span style="background-color: white;"><code>cp&nbsp;</code></span><code><i style="background-color: white;">/etc/apache2/sites-available/default&nbsp;</i><i style="background-color: white;">/etc/apache2/sites-available/www</i></code></div></span><i style="background-color: white;"><div style="text-align: justify;"><br /></div></i></li><li><div style="text-align: justify;"><span style="background-color: white;">Open up the 'www' file we created in text editor OR use this command via terminal</span></div><i style="background-color: white;"><div style="text-align: justify;"><i style="background-color: white;"><code>kate (or gedit) /etc/apache2/sites-available/www</code></i></div></i></li></ul><ul style="text-align: left;"><li style="text-align: justify;">Find and replace "/var/www" with the path we wanna use as our server root, say "/home/dante/www"</li></ul><div style="text-align: justify;">And that's all for the tough part. Now we have created a different site which we can enable or disable via command line anytime. This give us the power to use multiple server roots and switch between them easily.</div><div style="text-align: justify;">To enable our new site (i.e. to change the server root dir), enter following command in terminal</div><blockquote class="tr_bq" style="text-align: justify;"><code>sudo a2ensite www</code></blockquote><div style="text-align: justify;">But before that we need to disable already enabled default site, to disable it run</div><blockquote class="tr_bq" style="text-align: justify;"><code>sudo a2dissite default</code></blockquote><div style="text-align: justify;">Simple enough, huh!<br />Well I can't agree more that this is quite a hassle to just changing server root dirs. But here's an alternative.<br /><b>Alternatively, </b>we can create a virtualhost.<br />For this, we'll edit the default &nbsp;file in /etc/apache2sites-available/ and also the /etc/hosts file. Then we'll give different projects different URIs (that will be accessible only to your computer) and use those URIs instead of 127.0.0.1 or something. For example, for a project called 'php-project', we'll assign phpproject.dev (can be anything) and enter http://phpproject.dev in browser to see our project.<br />Here's how we do it.<br /><br /><b>CREATE VIRTUAL HOST:</b><br /><br /><ul><li>Change directory to /etc/apache2/sites-available<br /><span style="font-family: Courier New;"><i>cd /etc/apache2/sites-available</i></span></li><li><span style="font-family: Courier New;">Open 'default' in editor<br /><i>sudo gedit&nbsp;</i></span><span style="font-family: Courier New;">/etc/apache2/sites-available/default</span></li><li><span style="font-family: 'Courier New';">Enter following at the end of file&nbsp;</span><i><virtualhost><br /></virtualhost></i><i>&nbsp;&nbsp;</i>DocumentRoot "/home/[username]/phpProject/" <br />&nbsp; ServerName phpproject.dev <i>&nbsp; &nbsp;&nbsp;</i></li></ul></div><br /><br />Here, DocumentRoot is the location of your project ([username] is your username, like 'channi'), and phpproject.dev is the name you want to access the project with (its local browser address)<br /><br /><b>EDIT /etc/hosts</b><br /><div style="text-align: justify;"><ul><li>Open /etc/hosts in editor<br /><i>sudo gedit /etc/hosts</i></li><li>Enter following line at the end<br /><i>0.0.0.0 &nbsp;phpproject.dev</i><br /><br />(phpproject.dev can be anything like iamawesome.com or whatever, but keep it same as ServerName in /etc/apache2/sites-available/defautl file)</li></ul><div>And that's it. You can now simply open up your browser and go to phpproject.dev, and your project is there for you.</div><br /><br /></div><div style="text-align: justify;">Wish there was an easy way. If you are thinking the same, then congrats actually, php5.4 comes with an inbuilt server script which can solve many of our problems and provide a nice and easy way to debug php apps. We'll talk about it shortly. &nbsp;</div><div style="text-align: justify;">So let's <a href="http://channikhabra.blogspot.in/2012/07/setting-up-your-own-lamp-machine-for.html">setup Mysql and PHP</a>.</div><div style="text-align: justify;"><a href="http://channikhabra.blogspot.in/2012/07/setting-up-your-own-lamp-machine-for.html" target="">&gt;&gt;NEXT&gt;&gt;</a></div></div></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Backtrack 5 R1 as Desktop Operating System: BT for Beginners]]></title>
    <link href="http://beatofthegeek.com/2011/10/backtrack-5-r1-as-desktop-os.html"/>
    <updated>2011-10-22T00:00:00+05:30</updated>
    <id>http://beatofthegeek.com/2011/10/backtrack-5-r1-as-desktop-os</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on"><div style="text-align: justify;"><a href="http://www.backtrack-linux.org/">Backtrack</a> is one of the most famous penetration testing Linux distros. It is derived from Linux 10.04, but it is not as easy as Ubuntu to use for a rookie Linux user. BT5 R1 has made it a lot easier to use it as a Desktop OS, but here is how I tuned my machine this time.</div><a href="http://4.bp.blogspot.com/-OIoXLkNj1B8/TqKDZxze85I/AAAAAAAAAK4/liN6wKr4DYw/s1600/Dev_backtrack_v7_v2.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em; text-align: justify;"><img border="0" src="http://4.bp.blogspot.com/-OIoXLkNj1B8/TqKDZxze85I/AAAAAAAAAK4/liN6wKr4DYw/s320/Dev_backtrack_v7_v2.png" height="200" width="320" /></a><br /><div style="text-align: justify;"><b><span class="Apple-style-span" style="color: #660000; font-size: large;">Adding Unprivileged user</span></b></div><div style="text-align: justify;"><span class="Apple-style-span" style="font-size: large;"><b><br /></b></span></div><div style="text-align: justify;">Default user in BT is root, since it is made for penetration testers and root privileges are needed for running almost all the tools. But, we are using it as a Desktop OS and for general usage, <a href="http://www.linuxquestions.org/questions/linux-newbie-8/what-is-so-dangerous-about-using-root-47298/">super user privileges are dangerous</a>. So we'll add a normal user (like a default user in Ubuntu and Mint). BT5 R1 has made this job a lot easier. We must need to issue a single command:</div><blockquote style="text-align: justify;"><code><b>adduser username </b></code></blockquote><div style="text-align: justify;">where username is name of user we want to add.</div><div style="text-align: justify;">In previous versions of BT, we have to install adduser program using "apt-get install adduser".</div><div style="text-align: justify;"><br /><!-- more --><br /></div><div style="text-align: justify;"><span class="Apple-style-span" style="color: #660000; font-size: large;"><b>Allowing "sudo" for new user</b></span></div><div style="text-align: justify;"><span class="Apple-style-span" style="font-size: large;"><b><br /></b></span></div><div style="text-align: justify;">Now we have added a new user, but it is totally powerless. You would not like to switch to root to do every small task which require super user privileges. So we will allow the usage of sudo command for out newly born user, for this we have to add the user to sudoers list. Run the following command for this:</div><blockquote style="text-align: justify;"><code><b>visudo</b></code></blockquote> <script type="text/javascript"><!-- google_ad_client = "ca-pub-5172967015513444"; /* 468 x 15 link ads */ google_ad_slot = "8665802727"; google_ad_width = 468; google_ad_height = 15; //--></script><script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script> <div style="text-align: justify;">Pretty small one, isn't it...:P &nbsp; Of course, we need to be logged in as root to run this command.</div><div style="text-align: justify;">This will open sudoers file in "nano" editor in terminal for editing. Default configuration allows only root to have all the powers. In the file where you see:</div><blockquote><div style="text-align: justify;"># Members of the admin group may gain root privileges</div><div style="text-align: justify;">%admin ALL=(ALL) ALL</div></blockquote><div style="text-align: justify;">After this add a line same as above but replace "admin" with username of your choice and for example add following line for allowing "channi" to use sudo :</div><blockquote><div style="text-align: justify;">%channi ALL=(ALL) ALL</div></blockquote><div style="text-align: left;"><div style="text-align: justify;">Remember, in any case if sudo don't work, we can easily switch to root using " su root" command from within our normal user session, but don't use it recklessly.&nbsp;</div></div><div style="text-align: left;"><div style="text-align: justify;">After editing, exit nano using ctrl+X and save the file.</div></div><div style="text-align: left;"><div style="text-align: justify;"><br /></div></div><div style="text-align: left;"><div style="text-align: justify;"><b><span class="Apple-style-span" style="color: #660000; font-size: large;">Editing fstab</span></b></div></div><div style="text-align: left;"><div style="text-align: justify;"><br /></div></div><div style="text-align: left;"><div style="text-align: justify;">When logged in as a normal user, we are not allowed to access the filesystem freely. Even when we have added the user to be in sodoers list, there are several restrictions on using it. We can remove most of these by editing fstab, which is the system file which contain information about how and which filesystems/partitions will be mounted. This will also allow us to automount partitions of our choice.&nbsp;</div></div><div style="text-align: left;"><div style="text-align: justify;">Don't forget to make a backup before you edit anything. fstab is a really critical file, edit it carelessly and you will never be able to boot your system.</div></div><div style="text-align: left;"><div style="text-align: justify;">To start editing fstab, issue following command:</div></div><div style="text-align: left;"><blockquote style="text-align: justify;"><code><b>sudo gedit /etc/fstab</b></code></blockquote></div><div style="text-align: justify;">Don't change anything in the file. We'll just add some new lines. For example for adding a partition, I added this line:</div><blockquote><div style="text-align: justify;">UUID=26440134013F55 /media/F ntfs defaults,auto,uid=1001,gid=1001,umask=007 0 0</div></blockquote><div style="text-align: justify;">Follow these steps to edit fstab on your machine:</div><div style="text-align: justify;"><b><br /></b></div><div style="text-align: justify;"><b><span class="Apple-style-span" style="color: #660000;">Find UUID:</span></b>&nbsp;First we must know the UUID of the partition to be added. For that run following command:</div><blockquote style="text-align: justify;"><code><b>sudo blkid</b></code></blockquote><div style="text-align: justify;">and figure out the partition of choice and replace the UUID above.</div><div style="text-align: justify;"><b><br /></b></div><div style="text-align: justify;"><b><span class="Apple-style-span" style="color: #660000;">Place to mount:</span></b>&nbsp;Next is the place where we want to mount the partition (/media/F) in my case. Before mounting the partition on a place, that directory must already exist on filesystem. For example, to mount it as F in "/media", first create a directory named F (using "sudo mkdir /media/F"). Than add that location in above line.</div><div style="text-align: justify;"><b><br /></b></div><div style="text-align: justify;"><b><span class="Apple-style-span" style="color: #660000;">Filesystem:</span></b>&nbsp;Next is the filesystem of the partition. If you don't know what is it, blkid tell you that as well. In my case it is a old windows NTFS partition where I keep binaries.</div><div style="text-align: justify;"><b><br /></b></div><div style="text-align: justify;"><span class="Apple-style-span" style="color: #660000;"><b>How it should be mounted</b>:</span><b>&nbsp;</b>Next is the list of options with which partition will be mounted. It is a comma separated list so don't add spaces or tabs. There are a number of options, "defaults" set them all to default, and they can be explicitly stated if defaults don't suit us. Like we have written "auto" after "defaults". This will automatically mount the partition after reboot.</div><div style="text-align: justify;">Next are uid and gid. uid stands for User ID, ID of user who will own the files on partition. We can find it by running this command while logged in as he normal user, "echo $UID". And gid is Group ID, ID of group who own the files on partition. Use this command to find it,</div><blockquote style="text-align: justify;"><code><b>cat /etc/group|grep channi</b></code></blockquote><div style="text-align: justify;">where channi may be any username.</div><div style="text-align: justify;">Next is umask. It decides what permissions will be for User, Group, and Others (umask=UGO). It has to be numbers between 0 to 7, where 0 is for all permissions (read write and execute) and 7 for no permissions.</div><div style="text-align: justify;"><br /></div><div style="text-align: justify;"><b><span class="Apple-style-span" style="color: #660000;">Final columns:</span> </b>Final columns should be 0 and 0. These are dump and fsck options (which have no business with us). Leave them for Linux filesystem to handle, just set them to zero.</div><div style="text-align: justify;">More partitions can be added similarly. You can read this article for <a href="http://www.tuxfiles.org/linuxhelp/fstab.html">more information on editing fstab.</a></div><div style="text-align: justify;">TO check if everything went well, issue "sudo mount -a" (unmount the partitions before this) . I needed to reboot my machine for changes to take effect completely.</div><div style="text-align: justify;"><br /></div><div style="text-align: justify;"><b><span class="Apple-style-span" style="color: #660000; font-size: large;">Installing Codecs</span></b></div><div style="text-align: justify;"><br /></div><div style="text-align: justify;">Now it is about time to install codecs and watch some movies and play music. We will install Ubuntu restricted extras for that. First we need to add medibuntu repository and than we'll install codecs. Use following command for all that:</div><div style="text-align: justify;"><br /></div><span class="Apple-style-span" style="font-family: Verdana, Arial, Tahoma; font-size: 12px;"></span><br /><pre class="alt2" dir="ltr" style="background-attachment: initial; background-clip: initial; background-color: white; background-image: initial; background-origin: initial; border-bottom-style: inset; border-bottom-width: 1px; border-color: initial; border-left-style: inset; border-left-width: 1px; border-right-style: inset; border-right-width: 1px; border-top-style: inset; border-top-width: 1px; height: 34px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; overflow-x: auto; overflow-y: auto; padding-bottom: 6px; padding-left: 6px; padding-right: 6px; padding-top: 6px; text-align: justify; width: 640px;"><b style="color: black;">sudo wget http://www.medibuntu.org/sources.list.d/$(lsb_release -cs).list --output-document=/etc/apt/sources.list.d/medibuntu.list &amp;&amp; sudo apt-get -q update&amp;&amp; sudo apt-get --yes -q --allow-unauthenticated install medibuntu-keyring &amp;&amp; sudo apt-get -q update &amp;&amp; </b><b>sudo apt-get install -y ubuntu-restricted-extras non-free-codecs w32codecs libdvdcss2</b></pre><div style="text-align: justify;"><br /></div><div><div style="text-align: justify;">Everything is done with that huge command. Now we can install vlc, mplayer or whatever of your&nbsp;choice. Or if it didn't work for any reason, try entering individual commands:</div><blockquote><code><b>sudo wget http://www.medibuntu.org/sources.list.d/$(lsb_release -cs).list -O /etc/apt/sources.list.d/medibuntu.list</b></code></blockquote><blockquote><code><b>sudo apt-get -q update</b></code></blockquote><blockquote><code><b>sudo apt-get install -y ubuntu-restricted-extras&nbsp;</b></code><span class="Apple-style-span" style="font-family: monospace;"><b>non-free-codecs &nbsp;32codecs libdvdcss2</b></span></blockquote></div><div><div style="text-align: justify;"><b><span class="Apple-style-span" style="color: #660000; font-size: large;">Wanna read some Books ?</span></b><br />For those addicted to ebooks, a pdf reader is must. We can simply install "evince", default pdf reader in Ubuntu (till now) using:<br /><blockquote class="tr_bq"><b><code>sudo apt-get install evince</code></b></blockquote><b style="color: #660000; font-size: x-large;">Archive Manager</b><br />For extracting and compressing file archives, it is better to use command line. OR we can install Archive Manager (<br /><div style="display: inline !important;">file-roller)</div>&nbsp;to make the life easy. Just type this in terminal:<br /><blockquote class="tr_bq"><b><code>sudo apt-get install&nbsp;file-roller</code></b></blockquote><b><span class="Apple-style-span" style="color: #660000; font-size: large;">And what about the Firewall ?</span></b><br /><b><span class="Apple-style-span" style="color: #660000; font-size: large;"><br /></span></b>Backtrack has a firewall pre-installed &nbsp;but is disabled by default. For day to day usage, it can be enabled through following commands:<br /><b>To check the status of Firewall:</b><br /><blockquote class="tr_bq"><code><b>sudo ufw status</b></code></blockquote><b>To enable it:</b><br /><blockquote class="tr_bq"><code><b>sudo ufw enable (disable in order to disable it)</b></code></blockquote><b>For more commands:</b><br /><blockquote class="tr_bq"><code><b>sudo ufw commands</b></code></blockquote><br />We can also <b>install a gui </b>to manage Firewall settings. Use following command to install it:<br /><blockquote class="tr_bq"><code><b>sudo apt-get install gufw</b></code></blockquote><br /><br /></div><div style="text-align: justify;"><b><span class="Apple-style-span" style="color: #660000; font-size: large;">Some&nbsp;Unnecessary&nbsp;tuning</span></b></div><div style="text-align: justify;"><br /></div><div style="text-align: justify;">All that is enough for a smooth operation, but there are still some tweaks you would like to try.</div><div style="text-align: justify;"><br /></div><div style="text-align: justify;"><span class="Apple-style-span" style="color: #660000;"><b>A login screen</b>:</span> We cam install a login screen as that of Ubuntu for logging in. We'll install gdm (for gnome and kdm for kde) for that:</div><blockquote><div style="text-align: justify;"><code><b>sudo apt-get install gdm</b></code></div></blockquote><div style="text-align: justify;"><br /></div><div style="text-align: justify;">But this is not enough, we have to edit gdm configuration file to make it work on startup. To edit the gdm configuration, file issue following command:</div><blockquote><div style="text-align: justify;"><code><b>sudo gedit /etc/init/gdm.conf</b></code> (kdm.conf for kdm)</div></blockquote><div style="text-align: justify;">This will open gedit window. Now in that file, look for "script" and "end script" block. Delete everything except last two lines, make it read:</div><div style="text-align: justify;"><br /></div><blockquote><div style="text-align: justify;">script</div><div style="text-align: justify;">&nbsp; &nbsp; export XORGCONFIG</div><div style="text-align: justify;">&nbsp; &nbsp; exec gdm-binary $CONFIG_FILE</div><div style="text-align: justify;">end script &nbsp;</div></blockquote><div style="text-align: justify;">for kdm it should be,</div><div style="text-align: justify;"><br /></div><blockquote><div style="text-align: justify;">script&nbsp; &nbsp; export XORGCONFIG</div><div style="text-align: justify;">&nbsp; &nbsp; exec kdm</div><div style="text-align: justify;">end script &nbsp;</div></blockquote><div style="text-align: justify;">It will make a login screen appear on startup instead of pointing to first Virtual Console. X Server (GUI) will start in 7th <a href="http://en.wikipedia.org/wiki/Virtual_console">virtual console</a> now.</div><div style="text-align: justify;">To do <b><span class="Apple-style-span" style="color: #660000;">more tweaks with the Graphical User Interface</span></b>, we can <b><span class="Apple-style-span" style="color: #660000;">install Ubuntu-tweak</span></b>. Issue following commands for that:<code><br /></code></div><blockquote><br /><div style="text-align: justify;"><span class="Apple-style-span" style="font-family: monospace;"><b>sudo add-apt-repository ppa:tualatrix/ppa</b></span></div><b><span class="Apple-style-span" style="font-family: monospace;">sudo apt-get update</span><code>sudo apt-get install ubuntu-tweak</code></b></blockquote><div style="text-align: justify;">You can access Ubuntu-tweak by writing "ubuntu-tweak" command in terminal.&nbsp;It will allow you to change a lot of things, including login wallpaper, computer name etc etc. I personally don't like using such tools, but just in case you like it.&nbsp;</div><div style="text-align: justify;">I am not a fan of Candy graphics, so I myself have not installed any of the extra graphic themes/effects, but if you like you can try installing Compiz Fusion. Do it using Synaptic (you will need to install it on BT, use "apt-get install synaptic"). You can read this article for <a href="http://channikhabra.blogspot.com/2011/08/finetune-ui-with-mouse-gestures.html">little more tuning of User Interface in Backtrack</a>.&nbsp;</div><div style="text-align: justify;">Hope this helps...: )</div><div style="text-align: justify;">If you have anything more to share or I said something wrong than please state it in a comment.<br /><br /><hr /><br /><b><i>Circle Beat Of The Geek on</i></b> <a href="https://plus.google.com/109838896781876000861" target="_blank">Google Plus</a><br /><i><b>OR Like us on</b></i> <a href="https://www.facebook.com/pages/Beat-Of-The-Geek/251813454834549" target="_blank">Facebook</a> <b><i>&nbsp;OR Follow on</i></b> <a href="https://twitter.com/#!/beatofthegeek" target="_blank">Twitter</a></div></div></div></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Download in Geek Style: Use Wget (Part 2)]]></title>
    <link href="http://beatofthegeek.com/2011/08/download-in-geek-style-use-wget-part-2.html"/>
    <updated>2011-08-21T00:00:00+05:30</updated>
    <id>http://beatofthegeek.com/2011/08/download-in-geek-style-use-wget-part-2</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on">Hello there ! !<br />After our last <a href="http://channikhabra.blogspot.com/2011/08/download-in-geek-style-use-wget-part-1.html">article on Introduction to wget for Linux newbies</a>, it is time to advance a little further. In this article &nbsp;we'll discuss advanced usage of Wget.<br />Let's start with Wget's most wanted command:<br /><br /><span class="Apple-style-span" style="font-size: 19px; font-weight: bold;"><b><span class="Apple-style-span" style="color: #6aa84f; font-size: small;"></span></b></span><br /><b><span class="Apple-style-span" style="color: #6aa84f;">Downloading Recursively (-r switch)</span></b><br /><div><span class="Apple-style-span" style="color: #6aa84f;"><b><br /></b></span>Wget can download recursively, following all the links it meet in the way of downloading process. For example, you are reading an online book (ebook of course), which has links to further chapters. Using this command you can easily download all the pages of the ebook with a single command making your own copy of the ebook to be read offline. Even better, doing some Google we can download as many mp3s or other files as we want, all in a single command.<br />Excited ? (I know you are)<br />All right, enough talking.<br /><span class="Apple-style-span" style="color: #6aa84f; font-weight: bold;"></span><br /><hr /><br /><!-- more --><br /><br /><span class="Apple-style-span" style="color: #6aa84f; font-weight: bold;"><span class="Apple-style-span" style="font-size: large;">How to download recursively</span></span><br /><br /><code> wget -r -l 7 --no-parent&nbsp;</code><span class="Apple-style-span" style="font-family: monospace;">-A pdf,djvu&nbsp;</span><span class="Apple-style-span" style="font-family: monospace;">-nH --cut-dirs=4 -P "My download directory" "Link to download page"&nbsp;</span><br />&nbsp;<b>Time for some explanations:</b><br /><b><span class="Apple-style-span" style="color: #6aa84f;">-r or --recursive</span>&nbsp; &nbsp;</b>This switch tell wget to start downloading recursively from the link given.<br /><br /><b><span class="Apple-style-span" style="color: #6aa84f;">-l or --level='depth'</span></b> &nbsp; &nbsp;When downloading recursively, wget follows a system of levels. This denotes the levels of depth to which wget will follow links.<br />As in above example when we start a download from page 1 with level stated to be 7, wget download main page first. After this it follows all the links given on the page. This is level one. After downloading everything, wget starts following links given in downloaded pages. This is level 2. Similarly wget will download everything &nbsp;following every link it meet in the way until it reaches maximum depth.<br />By default, wget sets depth level to be 5. It can also be set to infinite<br /><blockquote><code>wget -r -l inf "download link" </code> or <code>wget -r l 0 "link"</code></blockquote><br /><span class="Apple-style-span" style="color: #6aa84f;"><b>--no-parent or -np </b></span>&nbsp; Wget's recursive download is bidirectional. It means wget follows link in both directions of link&nbsp;hierarchy (err... what is that?).<br />Let's see an example. Assume we are downloading free ebooks from a website, say example.com/ebooks/english/list.html . So&nbsp;&nbsp;what we want is downloading English books only. But by default, wget will follow all links on list.html BUT it will also move upwards and follow links it find there. This is not what we want.<br />SO here is --no-parent. It is a very useful command which ensures that we download only downwards the hierarchy and don't go upwards. <br /><br /><span class="Apple-style-span" style="color: #6aa84f;"><b>Download specific file types (-A 'filetype or list' or --accept="list of filetypes")</b></span> &nbsp; &nbsp;When downloading ebooks from our kind website, we don't want any HTML,CSS or Javascript files to be downloaded. By default, wget will download everything including images, scripts &nbsp;and everything. -A or --accept switch allow us to download only desired files. In the example, we want only .pdf and .djvu files to be downloaded, and wget will do that, strictly following our orders. Multiple filetypes can be given separated by commas.<br /><br /><span class="Apple-style-span" style="color: #6aa84f;"><b>-R "list of filetypes" or --reject="filetypes"</b></span> &nbsp; Similar to -A is -R. While -A accepts some files and rejects others -R, rejects some given filetypes and download everything else.<br /><br /><span class="Apple-style-span" style="color: #6aa84f;"><b><u>Handling Directories</u></b></span><br /><br /><span class="Apple-style-span" style="color: #6aa84f;"><b>-P "path" or --directory-prefix="path" </b></span>&nbsp; As stated in <a href="http://channikhabra.blogspot.com/2011/08/download-in-geek-style-use-wget-part-1.html">previous article</a>, -P can be used to redirect downloaded file to some specific path.<br /><br />But when downloading recursively, there is one problem. Wget saves all the files in the same directory hierarchy as they were on the server. As in our example, by default all files will be saved as this,<br /><blockquote>&nbsp;Home Folder&gt; example.com &gt; ebooks &gt; english&gt; file.pdf</blockquote>This behavior can be very irritating for normal users like us. But no worries, wget provides many options to handle this our own way. Here are some most commonly used ones.<br /><br /><span class="Apple-style-span" style="color: #6aa84f;"><b>--cut-dirs=x </b></span>&nbsp; &nbsp;This is useful command for controlling the directory structure of the location where recursively downloaded files will be saved. It cut the "x" directory components from the hierarchy.<br /><br /><span class="Apple-style-span" style="color: #6aa84f;"><b>--nH or --no-host-directories</b></span> &nbsp; &nbsp;This command cuts the name of host from directory structure. In other words, it disables generation of host prefixed directories.<br /><br /><span class="Apple-style-span" style="color: #6aa84f;"><b>-nd or --no-directories</b></span> &nbsp; It suggests wget to not to use any directory structure at all and save all the files in open (by default) or in the folder specified by -P command.<br /><br /><b>Example:</b><br />Assume that we are recursively downloading (pdf) files from example.com/ebooks/english, then this is how they will be saved on our PC with different commands...<br /><br /><blockquote>No options &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;example.com/ebooks/english/file.pdf<br />-nH &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ebooks/english/file.pdf<br />-nH --cut-dirs=1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;english/file.pdf<br />--cut-dirs=1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;example.com/english/file.pdf</blockquote>Got it ?....Good... : )<br /><br /><span class="Apple-style-span" style="color: #6aa84f;"><b>Making readable Offline Copies of Websites</b></span><br /><span class="Apple-style-span" style="color: #6aa84f;"><b><br /></b></span>It is really easy to make offline copies of websites, just start a recursive download and it is done. No it is not.<br />&nbsp;Think of the links given on pages. For example, if we download an ebook (HTML files) which has links to next chapters and other such links, all of them point to pages available on server, like &nbsp;an ebook at "example.com/onlinebook/contents" will have link to chapter 1 like this, "example.com/onlinebook/chapter1". Even in an offline copy (that we have made using wget), clicking on this link will take us online to the server. But this is not what we want.<br /><div>Again, no worries, wget has a solution for this.</div><div><br /></div><div><span class="Apple-style-span" style="color: #6aa84f;"><b>-k or --convert-links</b></span>&nbsp; &nbsp; This is an extremely useful option which converts all the links in downloaded pages to their local copies (if they are downloaded). In case HTML files have link to the content which has not been downloaded, wget will convert those links to their absolute location (internet of course). This ensures that there are no broken links and make local viewing smooth.</div><div><br /></div><div><span class="Apple-style-span" style="color: #6aa84f;"><b>-p or --page-requisites </b></span>&nbsp; &nbsp; As all other wget commands, this is also a very useful command which help to download all the files which are necessary for proper display of a page. It downloads everything (images, sounds, style sheet references etc) which are necessary for proper display of page even if they are located on different websites.<br /><br /><b><span class="Apple-style-span" style="color: #6aa84f; font-size: large;">When She said NO !!</span></b><br /><br />Sometimes web servers don't allow tools like wget to access &nbsp;their data and hence we can't download from such servers. But as I am saying from very&nbsp;<a href="http://channikhabra.blogspot.com/2011/08/download-in-geek-style-use-wget-part-1.html">beginning</a>, wget has a way for everything (almost). Here are some useful commands which can be used to get access when the server says no and tempt to kick your ass.<br /><br /><span class="Apple-style-span" style="color: #6aa84f;"><b>-U "agent" or --user-agent="agent" </b></span>&nbsp; &nbsp;When wget access a file on a HTTP server, it identifies itself by sending a user agent string (header field). It is like it says to server, "Hey baby, this is wget. Wassup ?". But sometimes HTTP servers deny connections to some agents (web browser, wget etc are all agents which allow us access Internet through protocols) or only allow some specific agents to access their data. We can fool the server by changing the user agent string. The command looks like this:<br /><blockquote><code>wget -U "Mozilla/5.0"</code>&nbsp;or&nbsp;<code>wget --user-agent="Mozilla/5.0"</code></blockquote>Here Mozilla is name of agent and 5.0 is version number. What we are doing is, changing user ID to look as if it was sent by your browser or at least hide the fact that it is sent by wget.<br />Actual User ID string is &nbsp;pretty long and carry more information, but this much is fine for fooling most web servers. We can also say wget to not to send any user ID with this command:<br /><blockquote><code>wget --user-agent=""</code>&nbsp; &nbsp;</blockquote><span class="Apple-style-span" style="color: #6aa84f;"><b>--referer=url </b></span>&nbsp; &nbsp;This command includes the "Referer: url" in the HTTP request. Sometimes servers expect that their data is always accessed by web browsers which are always sent by some page which points to them. This command is not used often, but may be useful in some particular case.<br /><br /><span class="Apple-style-span" style="color: #6aa84f;"><b>--http-user=user and --http-password=password</b></span> &nbsp; In case you have an account on the server and server needs username and password to authenticate the request, these commands are to be used. Similar commands are <b>--ftp-user=user</b> and <b>--ftp-password=password</b> for ftp servers and <b>--user=user</b> and <b>--password=password</b> for both http and ftp servers. Latter two have lower preference than first two command sets.<br /><br /><span class="Apple-style-span" style="color: #6aa84f;"><b>-w seconds or --wait=seconds </b></span>&nbsp; &nbsp; This command wait for given number of seconds between two consecutive downloads thus decreasing the load on the server. Instead of in seconds, time can be given in minutes with "m" suffix or in hours or even in days with "h" and "d" suffices. Large values can be useful in case destination server is down, giving wget enough time to retry and wait till it is up again.<br /><br /><span class="Apple-style-span" style="color: #6aa84f;"><b>--random-wait </b></span>&nbsp; Sometimes, web servers do analyse the traffic coming to them and find out if automatic tools like wget access them. They usually count the time between requests they&nbsp;receive&nbsp;and deny further requests, --random-wait switch allows us to make wget wait for random time between&nbsp;consecutive&nbsp;downloads and fooling the server.<br />This option causes the&nbsp;time between requests to vary between 0.5 and 1.5 * wait seconds,where wait was specified using the --wait option, in order to mask&nbsp;Wget's presence from such analysis.<br /><div><br /></div><div><span class="Apple-style-span" style="color: #6aa84f;"><b>Unleash the power of Google</b></span><br /><span class="Apple-style-span" style="color: #6aa84f;"><b><br /></b></span></div>Google too has a syntax like *nix commands, which can be used for finding desired results from over billions of pages on Internet. We can get just what we want if we use it smartly. Here we want a pure list of downloadable files, which we can download with wget. Just enter this string in Google Search Bar and hit enter:</div><div><blockquote><i>intitle:"index of/" mp3 "your favorite band" parent directory</i></blockquote>This will give links to pages which only have links to mp3 files of your favorite band ready to download. This link can be passed to wget for a recursive download with required recursion depth to&nbsp;successfully&nbsp;get what we want. Tinker with above search string to get other kind of stuff, may be videos, ebooks or whatever.<br />(This is meant for educational purposes only. Downloading this way is not legal. Use at your own risk... :P)<br /><br />Wget has much more than this. Refer to wget manual pages for more advanced and&nbsp;insight&nbsp;information.<br />HAPPY HACKING... :D<br /><br /><hr style="text-align: justify;" /><div style="text-align: justify;"><br /></div><div style="text-align: justify;"><b><i>Circle Beat Of The Geek on</i></b>&nbsp;<a href="https://plus.google.com/109838896781876000861" target="_blank">Google Plus</a></div><div style="text-align: justify;"><i><b>OR Like us on</b></i>&nbsp;<a href="https://www.facebook.com/pages/Beat-Of-The-Geek/251813454834549" target="_blank">Facebook</a>&nbsp;<b><i>&nbsp;OR Follow on</i></b>&nbsp;<a href="https://twitter.com/#!/beatofthegeek" target="_blank">Twitter</a></div></div></div></div></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Aptoncd Tutorial:How to backup your installed software on Ubuntu using Aptoncd]]></title>
    <link href="http://beatofthegeek.com/2011/07/aptoncd-tutorialhow-to-backup-your.html"/>
    <updated>2011-07-09T00:00:00+05:30</updated>
    <id>http://beatofthegeek.com/2011/07/aptoncd-tutorialhow-to-backup-your</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on"><div class="separator" style="clear: both; text-align: center;"><a href="http://2.bp.blogspot.com/-T4ZHztqzWSI/ThcS3OqiDWI/AAAAAAAAACM/oW2x1h-WFEg/s1600/Screenshot-APTonCD.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"><img border="0" height="182" src="http://2.bp.blogspot.com/-T4ZHztqzWSI/ThcS3OqiDWI/AAAAAAAAACM/oW2x1h-WFEg/s200/Screenshot-APTonCD.png" width="200" /></a></div>Being a distro hopper, I keep changing my desktop Operating System frequently, and it is really irritating when I have to download and install same software every time (it take a lot of time on my slow Internet connection). Aptoncd save me from this trouble by backing up all the software I've installed using apt-get (or other apt-get front ends like aptitude, synaptic etc.), to a CD/DVD which I can install when I re-install &nbsp;my Operating System. What aptoncd actually do is that it copies all the software present in apt archives and burn them into a .iso file. It can also make meta packages which binds software and their dependencies into one package simplifying their installation.<br />Aptoncd comes inbuilt with Linux Mint and can be installed on your Ubuntu machine using command:<br />&nbsp;<code><span class="Apple-style-span" style="color: #6aa84f;">&nbsp;<b>sudo apt-get install aptoncd</b></span></code><br />Once downloaded and installed, aptoncd can be accessed through its GUI interface (which is nice enough to get an admiration from command line geeks (including me)). So overall, what we have to do after its installation is this:<br /><!-- more --><br /><br /><span class="Apple-style-span" style="color: #6aa84f; font-size: large;">&nbsp; &nbsp; &nbsp; &nbsp;Start Aptoncd:</span><br /><br /><ol><a href="http://4.bp.blogspot.com/-er3-mhFk2hg/ThcQcg0aB6I/AAAAAAAAACI/Pw91ltWREP4/s1600/Screenshot.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"><img border="0" height="183" src="http://4.bp.blogspot.com/-er3-mhFk2hg/ThcQcg0aB6I/AAAAAAAAACI/Pw91ltWREP4/s200/Screenshot.png" width="200" /></a><li>Open Aptoncd from main menu of your OS, or simply type <code><span class="Apple-style-span" style="color: #6aa84f;">aptoncd</span></code> in terminal.</li><li>Click on "Create" button when the aptoncd window appear.</li><li>It will itself scan all the software present in your archives (that you've downloaded and installed using apt-get or something).<br /><span class="Apple-style-span" style="color: #6aa84f; font-size: large;">Add extra software:<br /></span></li><li>You can also add software manually downloaded which you want to be the part of your apt backup disk by clicking on add button. This can add a single package (.deb file) or multiple <br />packages present in a folder.</li><li>Aptoncd allow you to include specific software of your choice and will automatically include their dependencies. This is a very handy and useful option.</li><li>Aptoncd also check if two versions of same software are available and itself include only the latest one (you can change it though).<br /><br /><span class="Apple-style-span" style="color: #6aa84f; font-size: large;">Make iso image:</span></li><li>Once everything is done make the iso file by clicking on "Burn" button. Make sure "Make meta packages" option is ticked (it is very useful option for binding software and dependencies into single package).</li><li>At this stage you can chose to make one DVD or one or more CDs.</li><li>Once iso image in made, Aptoncd prompts you to burn it to CD/DVD. You can click no if you want to manually burn it later and copy the iso image from your Home folder.<br /><br /><span class="Apple-style-span" style="color: #6aa84f; font-size: large;">Restoring to another machine:</span></li><li>Once you have burnt the iso image on CD/DVD, it can be carried to another PC.&nbsp;</li><li>When disk in the disk drive, run AptonCD and chose "restore" option.<br /><br /><span class="Apple-style-span" style="color: #6aa84f; font-size: large;">Restoring from USB:</span></li><li>In case you don't want to burn the iso file to disk, it can also be restored from USB or other media. For this chose "Load" option after chosing restore option and point to the location where your file is located.(This option didn't work for Ubuntu 11.04 and Mint 11 though, but it do work with previous versions).<br /></li><li>Restoring using Aptoncd do not install any software, it just save them in archives directory. You have to manually install them.<br /><br /><span class="Apple-style-span" style="color: #6aa84f; font-size: large;">Installing&nbsp;restored&nbsp;Software :</span></li><li>We can install restored software with "apt-get install" command. Just type:<br /><code><span class="Apple-style-span" style="color: #93c47d;"><b> sudo apt-get install "your package name"</b></span></code><br />and as apt-get will look in its archives before downloading it, your software will get installed.</li><li>In case you want to install all the software restored, this can be done with a single command;<br /><code><span class="Apple-style-span" style="color: #6aa84f;"><b>sudo dpkg -i /var/cache/apt/archives/*.deb</b></span></code><br />Thanks to "make meta packages" option.<br /><br /><span class="Apple-style-span" style="color: #6aa84f; font-size: large;">In case Aptoncd is not installed on 'Other machine':</span></li><li>In case you want to install software on other machine where Aptoncd is not installed, it can be done using Synaptic.</li><li>Just extract all packages to your hard disk (or USB) and chose "Add downloaded software" from Synaptic menu. It will install them all. <a href="http://channikhabra.blogspot.com/2011/07/manually-copy-softwaredeb-files-from.html#Synaptic">(See this for help)</a></li></ol>This is a very simple tut of even simpler app. If you have any problem or I have written something wrong or missed something, please don't hesitate to mention. After all, everyone loves comments (me too).<br /><br /><hr \="" style="text-align: justify;" /><div style="text-align: justify;"><br /></div><div style="text-align: justify;"><b><i>Circle Beat Of The Geek on</i></b>&nbsp;<a href="https://plus.google.com/109838896781876000861" target="_blank">Google Plus</a></div><div style="text-align: justify;"><i><b>OR Like us on</b></i>&nbsp;<a href="https://www.facebook.com/pages/Beat-Of-The-Geek/251813454834549" target="_blank">Facebook</a>&nbsp;<b><i>&nbsp;OR Follow on</i></b>&nbsp;<a href="https://twitter.com/#!/beatofthegeek" target="_blank">Twitter</a></div><br /><ol></ol></div></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to use Linux:Problems you'll face using Linux offline and Solutions]]></title>
    <link href="http://beatofthegeek.com/2011/07/why-not-to-install-linux-offline-and.html"/>
    <updated>2011-07-02T00:00:00+05:30</updated>
    <id>http://beatofthegeek.com/2011/07/why-not-to-install-linux-offline-and</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on"><h2><span class="Apple-style-span" style="font-size: small;"><em><span class="Apple-style-span" style="font-weight: normal;">Hate theory? Go straight to </span></em></span><span class="Apple-style-span" style="font-size: small;"><em><a href="http://channikhabra.blogspot.com/2011/07/why-not-to-install-linux-offline-and.html#solution" style="font-weight: normal;">solutions</a></em></span></h2><h2></h2><h2></h2><div dir="ltr" style="text-align: left;" trbidi="on"><div style="text-align: left;"><a href="http://4.bp.blogspot.com/-mByb2f4nP24/ThMXRkBZGzI/AAAAAAAAACA/hAo-c-unnh8/s1600/5303243-angry-computer.jpg" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"><img border="0" height="200" src="http://4.bp.blogspot.com/-mByb2f4nP24/ThMXRkBZGzI/AAAAAAAAACA/hAo-c-unnh8/s200/5303243-angry-computer.jpg" width="187" /></a>Using Linux Operating System can be a real headache for early beginners when they are not connected to Internet. So I am writing this article covering major problems faced when one has to install software on an offline Linux machine and solutions to them.<br />When I first met Linux, thing I was screaming for was, where to find the setups of software. As I used to do in Windows, downloading and saving software setups for future installs is quite handy than downloading it&nbsp;every time. But it is hard to do this in Linux for a number of reasons.<br /><br /></div><ol style="text-align: left;"><li>Many so called user-friendly Linux Distributions like Ubuntu come without software people (new to Linux) expect preinstalled e.g. Ubuntu come without mp3 plugins and other codecs. So when offline, it is really irritating when one can't even play his/her favorite music. These include a large number of files which are hard to fetch manually.<a name='more'></a><!-- more --></li><li><b>Most software are available as source-codes packages</b> on their websites to download and not in binaries.&nbsp;</li><li>Even when it is possible to download .deb/.rpm packages and install them, as Linux uses a shared library system, most packages have lots of dependencies which have to be built and installed before main software. <b>Downloading and building all the dependencies and main software in right order can be a real headache</b> at times.</li><li><b>Source codes are tough to compile</b>&nbsp;for novices and if even they can compile, uninstalled dependencies come in the way.</li></ol><span style="color: #87a34d;"></span><br /><h2><a href="http://www.blogger.com/post-edit.g?blogID=3664370465667971076&amp;postID=6696719326036529595" name="solution"></a><br /><span style="color: #87a34d;">How to install software on an Offline Linux machine:</span></h2><br />Solutions here are focused on Debian based Linux Operating Systems like Ubuntu and other Debian/Ubuntu derivatives.<br /><br /><b>The main idea is to install or download software on a machine connected to internet and then somehow carry them to the offline computer</b>. Package managers of GNU/Linux distributions like apt-get do a very nice job of downloading and installing software '<b>with'</b> their dependencies, and we are going to use their power for our purpose (installing software on offline Linux machine).<br /><div style="text-align: left;"></div><b></b><br /><ol style="text-align: left;"><li><b><span class="Apple-style-span" style="font-weight: normal;"><b><span class="Apple-style-span" style="color: #6aa84f;"><a href="http://channikhabra.blogspot.com/2011/07/manually-copy-softwaredeb-files-from.html">Manually copying software installed using apt-get:</a></span> </b></span><span class="Apple-style-span" style="font-weight: normal;">Software installed on a system through apt-get, aptitude or synaptic etc are saved on hard disk.&nbsp;This method involve manually copy them and installing them on offline machine. However this method is </span><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="color: #cc0000;">not recommended for novices</span></span><span class="Apple-style-span" style="font-weight: normal;">.<br /><span class="Apple-style-span" style="border-collapse: collapse; font-family: Arial, Verdana, sans-serif; font-size: 12px; line-height: 21px;"><span class="Apple-style-span" style="background-color: white; color: #6aa84f;">⇒</span>&nbsp;&nbsp;</span>Install software on Linux system connected to Internet.<br /><span class="Apple-style-span" style="border-collapse: collapse; font-family: Arial, Verdana, sans-serif; font-size: 12px; line-height: 21px;"><span class="Apple-style-span" style="color: #6aa84f;">⇒</span>&nbsp;</span>Copy software from apt archives ( var/cache/apt/archives ) to usb drive etc.<br /><span class="Apple-style-span" style="border-collapse: collapse; font-family: Arial, Verdana, sans-serif; font-size: 12px; line-height: 21px;"><span class="Apple-style-span" style="color: #6aa84f;">⇒</span>&nbsp;</span>Carry software on offline machine and paste them there.<br /></span><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="border-collapse: collapse; font-family: Arial, Verdana, sans-serif; font-size: 12px; line-height: 21px;"><span class="Apple-style-span" style="color: #6aa84f;">⇒</span>&nbsp;</span>Install software using packet managers ( Synaptic recommended).<br /></span></b></li><li><span class="Apple-style-span" style="font-weight: normal;"><b><span class="Apple-style-span" style="color: #6aa84f;"><a href="http://channikhabra.blogspot.com/2011/07/aptoncd-tutorialhow-to-backup-your.html">Using Aptoncd:</a></span> </b></span><span class="Apple-style-span" style="font-weight: normal;">Aptoncd is a software developed for automating above stated process of backing up software downloaded and installed &nbsp;using apt-get, and it do this job very well. It is a very nice software with nice GUI interface and </span><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="color: #38761d;">easy to use for beginners</span></span><span class="Apple-style-span">.<br /><b><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="border-collapse: collapse; font-family: Arial, Verdana, sans-serif; font-size: 12px; line-height: 21px;"><span class="Apple-style-span" style="color: #6aa84f;">⇒</span>&nbsp;</span></span></b>Open Aptoncd<br /><b><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="border-collapse: collapse; font-family: Arial, Verdana, sans-serif; font-size: 12px; line-height: 21px;"><span class="Apple-style-span" style="color: #6aa84f;">⇒</span>&nbsp;</span></span></b>Create iso image of apt archives directory<br /><b><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="border-collapse: collapse; font-family: Arial, Verdana, sans-serif; font-size: 12px; line-height: 21px;"><span class="Apple-style-span" style="color: #6aa84f;">⇒</span>&nbsp;</span></span></b>Burn it to CD/DVD<br /><b><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="border-collapse: collapse; font-family: Arial, Verdana, sans-serif; font-size: 12px; line-height: 21px;"><span class="Apple-style-span" style="color: #6aa84f;">⇒</span>&nbsp;</span></span></b>Restore to offline computer<br /><b><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="border-collapse: collapse; color: #6aa84f; font-family: Arial, Verdana, sans-serif; font-size: 12px; line-height: 21px;">⇒</span></span></b>Install all packages using one command<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<code>sudo dpkg -i /var/cache/apt/archieves/*.deb</code><br />&nbsp; &nbsp;</span></li><li style="font-weight: bold;"><span class="Apple-style-span" style="font-weight: normal;"><b><span class="Apple-style-span" style="color: #6aa84f;"><a href="http://channikhabra.blogspot.com/2011/07/keryx-tutorial-download-software-for.html">Using Keryx:</a></span> </b></span><span class="Apple-style-span" style="font-weight: normal;">Keryx is a portable, cross platform offline package manager for Debian based Linux distributions (Ubuntu and derivatives). It works on a different principle. Keryx Download software on computer connected to internet (it may be on Linux or Windows) and then install them to offline PC.<br /><b><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="border-collapse: collapse; color: #6aa84f; font-family: Arial, Verdana, sans-serif; font-size: 12px; line-height: 21px;">⇒&nbsp;</span></span></b>Extract Keryx to a USB drive<br /><b><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="border-collapse: collapse; color: #6aa84f; font-family: Arial, Verdana, sans-serif; font-size: 12px; line-height: 21px;">⇒&nbsp;</span></span></b></span><span class="Apple-style-span" style="font-weight: normal;">First run&nbsp;Keryx&nbsp;on the offline Linux machine where it make a profile about the Linux &nbsp;Distribution and software installed on it.<br /><b><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="border-collapse: collapse; color: #6aa84f; font-family: Arial, Verdana, sans-serif; font-size: 12px; line-height: 21px;">⇒&nbsp;</span></span></b>Then run it on Computer with Internet connection (it may be Windows or Linux) where you &nbsp;can select and download software.<br />This method is&nbsp;</span><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="color: #38761d;">highly recommended for novices/ beginners</span></span><span class="Apple-style-span" style="font-weight: normal;"> as it involve very little manual work. Read complete Keryx tutorial here.<br /></span></li><li><span class="Apple-style-span" style="font-weight: normal;"><b><span class="Apple-style-span" style="color: #6aa84f;"><a href="http://channikhabra.blogspot.com/2011/07/how-to-create-bootabe-cddvd-from.html">Using Remastersys\Create Custom Live disk</a>:</span></b></span><span class="Apple-style-span" style="font-weight: normal;">&nbsp;This is my&nbsp;favorite method for backups as I frequently reinstall my Operating System(s) ( I have my reasons). This method involve using a script called Remastersys for making a bootable disk from a system already installed with Debian/Ubuntu/derivatives. In this process all the software installed on the machine also get included in the disk prepared with Remastersys. </span><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="color: #38761d;">This is a brilliant method highly recommended for novices</span></span><span class="Apple-style-span">.<br /><b style="font-weight: normal;"><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="border-collapse: collapse; color: #6aa84f; font-family: Arial, Verdana, sans-serif; font-size: 12px; line-height: 21px;">⇒&nbsp;</span></span></b>Run Remastersys GUI<br /><b style="font-weight: normal;"><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="border-collapse: collapse; color: #6aa84f; font-family: Arial, Verdana, sans-serif; font-size: 12px; line-height: 21px;">⇒&nbsp;</span></span></b>Follow the instructions (choose dist option)<br /><b style="font-weight: normal;"><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="border-collapse: collapse; color: #6aa84f; font-family: Arial, Verdana, sans-serif; font-size: 12px; line-height: 21px;">⇒&nbsp;</span></span></b>Copy iso image of your custom Live CD/DVD from /usr/home/remastersys/remastersys<br /><b style="font-weight: normal;"><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="border-collapse: collapse; color: #6aa84f; font-family: Arial, Verdana, sans-serif; font-size: 12px; line-height: 21px;">⇒&nbsp;</span></span></b>Burn it to disk or make a live USB using Unetbootin<br /><b style="font-weight: normal;"><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="border-collapse: collapse; color: #6aa84f; font-family: Arial, Verdana, sans-serif; font-size: 12px; line-height: 21px;">⇒&nbsp;</span></span></b></span>I<span class="Apple-style-span">nstall newly born custom Linux Distribution to offline PC&nbsp;</span></li></ol>But as with everything in life, all solutions have their own cons, pros and side effects. It is recommended to read each their tutorials (follow given links) for details.<br />If I am missing something here, or something I have written wrong, suggestions are more than welcome.<br /><br /><hr \="" style="text-align: justify;" /><div style="text-align: justify;"><br /></div><div style="text-align: justify;"><b><i>Circle Beat Of The Geek on</i></b>&nbsp;<a href="https://plus.google.com/109838896781876000861" target="_blank">Google Plus</a></div><div style="text-align: justify;"><i><b>OR Like us on</b></i>&nbsp;<a href="https://www.facebook.com/pages/Beat-Of-The-Geek/251813454834549" target="_blank">Facebook</a>&nbsp;<b><i>&nbsp;OR Follow on</i></b>&nbsp;<a href="https://twitter.com/#!/beatofthegeek" target="_blank">Twitter</a></div></div></div></div>

]]></content>
  </entry>
  
</feed>

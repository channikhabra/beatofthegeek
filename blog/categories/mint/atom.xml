<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Mint | Beat of The Geek]]></title>
  <link href="http://\.github.io/\/github/blog/categories/mint/atom.xml" rel="self"/>
  <link href="http://\.github.io/\/github/"/>
  <updated>2014-10-20T09:28:08+05:30</updated>
  <id>http://\.github.io/\/github/</id>
  <author>
    <name><![CDATA[Charanjit Singh]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[/etc/passwd illustrated]]></title>
    <link href="http://\.github.io/\/github/2013/12/etcpasswd-illustrated.html"/>
    <updated>2013-12-22T00:00:00+05:30</updated>
    <id>http://\.github.io/\/github/2013/12/etcpasswd-illustrated</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on"><h1 id="etcpasswd_illustrated"></h1><div class="separator" style="clear: both; text-align: center;"><a href="http://1.bp.blogspot.com/-dtO8EFBJ8AI/Uldeu-QcfvI/AAAAAAAAAis/y8i9xXh03h0/s1600/passwd.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"><img border="0" height="200" src="http://1.bp.blogspot.com/-dtO8EFBJ8AI/Uldeu-QcfvI/AAAAAAAAAis/y8i9xXh03h0/s200/passwd.png" width="200" /></a></div><i>etc/passwd file is is located, well, in /etc directory. /etc</i> stores most of the system level configurations for a typical  UNIX(-like) system. There are more than one ways to do something on a  UNIX(-like) system. We’ll discuss about some commands no the way which  can be used to do stuff we gonna do by tinkering with /etc/passwd in  this post. So let’s talk less and discuss something about the  /etc/passwd without loosing time.<br /><h3 id="why_do_etcpasswd_exist" style="text-align: left;">&nbsp;</h3><h3 id="why_do_etcpasswd_exist" style="text-align: left;">Why do /etc/passwd exist?</h3><br />So the first question that would come in a mortal mind is ‘what  for?’. Why do /etc/passwd even exist? It saves the information about all  the users on a system. Original use of this file was to store almost  all the data related to a user, including passwords. May be that’s the  reason behind its name. But don’t worry, passwords are no longer stored  as plain text in this file. More on this in later sections.<br /><h3 id="structure_of_etcpasswd" style="text-align: left;">&nbsp;<!-- more --></h3><h3 id="structure_of_etcpasswd" style="text-align: left;">Structure of /etc/passwd</h3><br />If you are on a GNU/Linux or similar system right now, you can take a  look at it. User info is stored in this file in single lines, new lines  for different users, with colons(’:’) as the separating character.  Quick, run this command:<br /><blockquote>head -n 1 /etc/passwd</blockquote>This will get you the first line of the file. If you do ‘cat  /etc/passwd’, you will see there are many lines. More than the users you  have made. Linux (and other Unix like systems) make users for running  some special processes which need some certain set of special  permissions. If you want to look which is the line for you (the  presently logged in user that is), run this<br /><blockquote>cat /etc/passwd | grep username</blockquote>On my system, it look like this:<br /><blockquote><blockquote>channi:x:1000:100:Charanjit Singh,Beat of the Geek:/home/channi:/bin/zsh</blockquote></blockquote>Different fields of the file are separated by colons(’:’). If you count, there are 7 columns in total. Lets discuss them all.<br /><h3 id="first_column_of_etcpasswd" style="text-align: left;">&nbsp;</h3><h3 id="first_column_of_etcpasswd" style="text-align: left;">First column of /etc/passwd</h3><br />It’s your login name. The name you enter when you login to the system  (or choose from the GUI). Yes, your login name will change if you  change the /etc/passwd file here. There are many ways of changing things  in GNU/Linux, and most of the times they are different commands which  change the underlying configuration files like this one.<br /><h2 id="alternative_command_for_changing_the_login_name" style="text-align: left;">&nbsp;</h2><h2 id="alternative_command_for_changing_the_login_name" style="text-align: left;">Alternative command for changing the login name</h2><br /><b>usermod -l NEWNAME</b> oldname<br /><br />Some system (including Ubuntu) offer another command for making changes to user info. To your surprise, it’s called <b>moduser</b> The difference b/w usermod and moduser is that of sophistication. Which  one is more sophisticated is arguable though. usermod uses flags to set  different information, and moduser provide an interface which ask you  for the information in a menu like manner. Try them yourself.<br /><h3 id="second_column_of_etcpasswd" style="text-align: left;">&nbsp;</h3><h3 id="second_column_of_etcpasswd" style="text-align: left;">Second column of /etc/passwd</h3><br />That’s your login password. Surprised? Your actual password is not  stored in this file actually. It’s not secure to store it in plain text  here, or even in ciphered form. Many programs need access to this file  for read purposes. Did you notice you didn’t need to enter root password  for reading /etc/passwd? So where is the password stored in Linux? Your  real password is ciphered with a secure one-way encryption algorithm  and is stored in a shadow file (/etc/shadow). Try to do ‘cat’ on it. Yes  you can’t. And that is justifiable. If you cat it with root password,  you will see login names and a jumbled word in front of them. That’s the  ciphered password. We’ll probably discuss them some other day. So since  the password is not stored here, we can’t do anything about it by  editing /etc/passwd, right? Not really. There is one thing we can do. If  you change the ‘x’ in there with an asterisk ’*’, the account gets  disabled and can’t be used. Actually if you change that ‘x’ (or if your  system has some other value there), it simply won’t work. The user is  greeted with charming ‘Authentication Failure’ messages.<br /><h3 id="third_column_of_etcpasswd" style="text-align: left;">&nbsp;</h3><h3 id="third_column_of_etcpasswd" style="text-align: left;">Third column of /etc/passwd</h3><br />In the third column comes user’s user id (UID you call it). A UID is a  unique id assigned by the system to each user on the system. Usernames  are only for humans, system itself identifies a user by its UID. You can  change this number (obviously) but it’s not recommended. There are  certain complications which may arise when you change the UID of a user  (remember file permissions? cron tabs?). If you want to change the uid,  better do it with <b>usermod -u</b>.<br /><h3 id="fourth_column_of_etcpasswd" style="text-align: left;">&nbsp;</h3><h3 id="fourth_column_of_etcpasswd" style="text-align: left;">Fourth column of /etc/passwd</h3><br />Similar to the uid, that’s the users gid (Group ID). It’s the id of  primary group of the user. On most systems it is set same as the uid  (not on mine though). You can change it with <b>usermod -g</b> command.<br /><blockquote><b>usermod -g</b></blockquote>If you want to know different id’s related to a user, feel free to use <b>id</b> command. It will tell you many different ids. Just type<br /><blockquote><b>id</b></blockquote>You can see different groups the user is member of with <b>groups</b> command.<br /><blockquote><b>groups</b></blockquote><h3 id="fifth_column" style="text-align: left;">&nbsp;</h3><h3 id="fifth_column" style="text-align: left;">Fifth column</h3><br />This field contains comments about a user. It’s called the <a href="http://en.m.wikipedia.org/wiki/Gecos_field">gecos field</a> and contains a comma separated list of the extra information about a user like full name, address etc. Apart from <b>usermod -c</b>, you can use <b>chfn</b> to change this field. <b>chfn</b> <i>chfn</i> is abbreviation for ‘change finger info’. Most of the information related to a user can be accessed with <b>finger</b> command. In other words, someone with access the system can finger you to get information (pun intended). Check it out: <b>&nbsp;</b><br /><br /><b>finger USERNAME</b><br /><h3 id="sixth_column" style="text-align: left;">&nbsp;</h3><h3 id="sixth_column" style="text-align: left;">Sixth column</h3><br />That’s the path to user’s home directory. It can be changed here or with <b>usermod -d</b> command. Although there are other ways of changing it (including  editing /etc/passwd file), but it is recommended not to do it that way.  We’ll probably discuss the complications some other day.<br /><blockquote><b>usermod -d /home/new-home USERNAME</b></blockquote><h3 id="seventh_column" style="text-align: left;">&nbsp;</h3><h3 id="seventh_column" style="text-align: left;">Seventh column</h3><br />That’s the final column of the /etc/passwd file. It contains the  shell for the users. Actually it’s the path to a program which is  executed everytime a user logs in to the system. For the normal users it  is a shell. It can be safely changed here or with <b>usermod -s</b>. Another quick command for changing default shell for a user is <b>chsh</b>.<br /><blockquote><b>chsh</b></blockquote></div></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Download in Geek Style: Use Wget (Part 2)]]></title>
    <link href="http://\.github.io/\/github/2011/08/download-in-geek-style-use-wget-part-2.html"/>
    <updated>2011-08-21T00:00:00+05:30</updated>
    <id>http://\.github.io/\/github/2011/08/download-in-geek-style-use-wget-part-2</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on">Hello there ! !<br />After our last <a href="http://channikhabra.blogspot.com/2011/08/download-in-geek-style-use-wget-part-1.html">article on Introduction to wget for Linux newbies</a>, it is time to advance a little further. In this article &nbsp;we'll discuss advanced usage of Wget.<br />Let's start with Wget's most wanted command:<br /><br /><span class="Apple-style-span" style="font-size: 19px; font-weight: bold;"><b><span class="Apple-style-span" style="color: #6aa84f; font-size: small;"></span></b></span><br /><b><span class="Apple-style-span" style="color: #6aa84f;">Downloading Recursively (-r switch)</span></b><br /><div><span class="Apple-style-span" style="color: #6aa84f;"><b><br /></b></span>Wget can download recursively, following all the links it meet in the way of downloading process. For example, you are reading an online book (ebook of course), which has links to further chapters. Using this command you can easily download all the pages of the ebook with a single command making your own copy of the ebook to be read offline. Even better, doing some Google we can download as many mp3s or other files as we want, all in a single command.<br />Excited ? (I know you are)<br />All right, enough talking.<br /><span class="Apple-style-span" style="color: #6aa84f; font-weight: bold;"></span><br /><hr /><br /><!-- more --><br /><br /><span class="Apple-style-span" style="color: #6aa84f; font-weight: bold;"><span class="Apple-style-span" style="font-size: large;">How to download recursively</span></span><br /><br /><code> wget -r -l 7 --no-parent&nbsp;</code><span class="Apple-style-span" style="font-family: monospace;">-A pdf,djvu&nbsp;</span><span class="Apple-style-span" style="font-family: monospace;">-nH --cut-dirs=4 -P "My download directory" "Link to download page"&nbsp;</span><br />&nbsp;<b>Time for some explanations:</b><br /><b><span class="Apple-style-span" style="color: #6aa84f;">-r or --recursive</span>&nbsp; &nbsp;</b>This switch tell wget to start downloading recursively from the link given.<br /><br /><b><span class="Apple-style-span" style="color: #6aa84f;">-l or --level='depth'</span></b> &nbsp; &nbsp;When downloading recursively, wget follows a system of levels. This denotes the levels of depth to which wget will follow links.<br />As in above example when we start a download from page 1 with level stated to be 7, wget download main page first. After this it follows all the links given on the page. This is level one. After downloading everything, wget starts following links given in downloaded pages. This is level 2. Similarly wget will download everything &nbsp;following every link it meet in the way until it reaches maximum depth.<br />By default, wget sets depth level to be 5. It can also be set to infinite<br /><blockquote><code>wget -r -l inf "download link" </code> or <code>wget -r l 0 "link"</code></blockquote><br /><span class="Apple-style-span" style="color: #6aa84f;"><b>--no-parent or -np </b></span>&nbsp; Wget's recursive download is bidirectional. It means wget follows link in both directions of link&nbsp;hierarchy (err... what is that?).<br />Let's see an example. Assume we are downloading free ebooks from a website, say example.com/ebooks/english/list.html . So&nbsp;&nbsp;what we want is downloading English books only. But by default, wget will follow all links on list.html BUT it will also move upwards and follow links it find there. This is not what we want.<br />SO here is --no-parent. It is a very useful command which ensures that we download only downwards the hierarchy and don't go upwards. <br /><br /><span class="Apple-style-span" style="color: #6aa84f;"><b>Download specific file types (-A 'filetype or list' or --accept="list of filetypes")</b></span> &nbsp; &nbsp;When downloading ebooks from our kind website, we don't want any HTML,CSS or Javascript files to be downloaded. By default, wget will download everything including images, scripts &nbsp;and everything. -A or --accept switch allow us to download only desired files. In the example, we want only .pdf and .djvu files to be downloaded, and wget will do that, strictly following our orders. Multiple filetypes can be given separated by commas.<br /><br /><span class="Apple-style-span" style="color: #6aa84f;"><b>-R "list of filetypes" or --reject="filetypes"</b></span> &nbsp; Similar to -A is -R. While -A accepts some files and rejects others -R, rejects some given filetypes and download everything else.<br /><br /><span class="Apple-style-span" style="color: #6aa84f;"><b><u>Handling Directories</u></b></span><br /><br /><span class="Apple-style-span" style="color: #6aa84f;"><b>-P "path" or --directory-prefix="path" </b></span>&nbsp; As stated in <a href="http://channikhabra.blogspot.com/2011/08/download-in-geek-style-use-wget-part-1.html">previous article</a>, -P can be used to redirect downloaded file to some specific path.<br /><br />But when downloading recursively, there is one problem. Wget saves all the files in the same directory hierarchy as they were on the server. As in our example, by default all files will be saved as this,<br /><blockquote>&nbsp;Home Folder&gt; example.com &gt; ebooks &gt; english&gt; file.pdf</blockquote>This behavior can be very irritating for normal users like us. But no worries, wget provides many options to handle this our own way. Here are some most commonly used ones.<br /><br /><span class="Apple-style-span" style="color: #6aa84f;"><b>--cut-dirs=x </b></span>&nbsp; &nbsp;This is useful command for controlling the directory structure of the location where recursively downloaded files will be saved. It cut the "x" directory components from the hierarchy.<br /><br /><span class="Apple-style-span" style="color: #6aa84f;"><b>--nH or --no-host-directories</b></span> &nbsp; &nbsp;This command cuts the name of host from directory structure. In other words, it disables generation of host prefixed directories.<br /><br /><span class="Apple-style-span" style="color: #6aa84f;"><b>-nd or --no-directories</b></span> &nbsp; It suggests wget to not to use any directory structure at all and save all the files in open (by default) or in the folder specified by -P command.<br /><br /><b>Example:</b><br />Assume that we are recursively downloading (pdf) files from example.com/ebooks/english, then this is how they will be saved on our PC with different commands...<br /><br /><blockquote>No options &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;example.com/ebooks/english/file.pdf<br />-nH &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ebooks/english/file.pdf<br />-nH --cut-dirs=1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;english/file.pdf<br />--cut-dirs=1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;example.com/english/file.pdf</blockquote>Got it ?....Good... : )<br /><br /><span class="Apple-style-span" style="color: #6aa84f;"><b>Making readable Offline Copies of Websites</b></span><br /><span class="Apple-style-span" style="color: #6aa84f;"><b><br /></b></span>It is really easy to make offline copies of websites, just start a recursive download and it is done. No it is not.<br />&nbsp;Think of the links given on pages. For example, if we download an ebook (HTML files) which has links to next chapters and other such links, all of them point to pages available on server, like &nbsp;an ebook at "example.com/onlinebook/contents" will have link to chapter 1 like this, "example.com/onlinebook/chapter1". Even in an offline copy (that we have made using wget), clicking on this link will take us online to the server. But this is not what we want.<br /><div>Again, no worries, wget has a solution for this.</div><div><br /></div><div><span class="Apple-style-span" style="color: #6aa84f;"><b>-k or --convert-links</b></span>&nbsp; &nbsp; This is an extremely useful option which converts all the links in downloaded pages to their local copies (if they are downloaded). In case HTML files have link to the content which has not been downloaded, wget will convert those links to their absolute location (internet of course). This ensures that there are no broken links and make local viewing smooth.</div><div><br /></div><div><span class="Apple-style-span" style="color: #6aa84f;"><b>-p or --page-requisites </b></span>&nbsp; &nbsp; As all other wget commands, this is also a very useful command which help to download all the files which are necessary for proper display of a page. It downloads everything (images, sounds, style sheet references etc) which are necessary for proper display of page even if they are located on different websites.<br /><br /><b><span class="Apple-style-span" style="color: #6aa84f; font-size: large;">When She said NO !!</span></b><br /><br />Sometimes web servers don't allow tools like wget to access &nbsp;their data and hence we can't download from such servers. But as I am saying from very&nbsp;<a href="http://channikhabra.blogspot.com/2011/08/download-in-geek-style-use-wget-part-1.html">beginning</a>, wget has a way for everything (almost). Here are some useful commands which can be used to get access when the server says no and tempt to kick your ass.<br /><br /><span class="Apple-style-span" style="color: #6aa84f;"><b>-U "agent" or --user-agent="agent" </b></span>&nbsp; &nbsp;When wget access a file on a HTTP server, it identifies itself by sending a user agent string (header field). It is like it says to server, "Hey baby, this is wget. Wassup ?". But sometimes HTTP servers deny connections to some agents (web browser, wget etc are all agents which allow us access Internet through protocols) or only allow some specific agents to access their data. We can fool the server by changing the user agent string. The command looks like this:<br /><blockquote><code>wget -U "Mozilla/5.0"</code>&nbsp;or&nbsp;<code>wget --user-agent="Mozilla/5.0"</code></blockquote>Here Mozilla is name of agent and 5.0 is version number. What we are doing is, changing user ID to look as if it was sent by your browser or at least hide the fact that it is sent by wget.<br />Actual User ID string is &nbsp;pretty long and carry more information, but this much is fine for fooling most web servers. We can also say wget to not to send any user ID with this command:<br /><blockquote><code>wget --user-agent=""</code>&nbsp; &nbsp;</blockquote><span class="Apple-style-span" style="color: #6aa84f;"><b>--referer=url </b></span>&nbsp; &nbsp;This command includes the "Referer: url" in the HTTP request. Sometimes servers expect that their data is always accessed by web browsers which are always sent by some page which points to them. This command is not used often, but may be useful in some particular case.<br /><br /><span class="Apple-style-span" style="color: #6aa84f;"><b>--http-user=user and --http-password=password</b></span> &nbsp; In case you have an account on the server and server needs username and password to authenticate the request, these commands are to be used. Similar commands are <b>--ftp-user=user</b> and <b>--ftp-password=password</b> for ftp servers and <b>--user=user</b> and <b>--password=password</b> for both http and ftp servers. Latter two have lower preference than first two command sets.<br /><br /><span class="Apple-style-span" style="color: #6aa84f;"><b>-w seconds or --wait=seconds </b></span>&nbsp; &nbsp; This command wait for given number of seconds between two consecutive downloads thus decreasing the load on the server. Instead of in seconds, time can be given in minutes with "m" suffix or in hours or even in days with "h" and "d" suffices. Large values can be useful in case destination server is down, giving wget enough time to retry and wait till it is up again.<br /><br /><span class="Apple-style-span" style="color: #6aa84f;"><b>--random-wait </b></span>&nbsp; Sometimes, web servers do analyse the traffic coming to them and find out if automatic tools like wget access them. They usually count the time between requests they&nbsp;receive&nbsp;and deny further requests, --random-wait switch allows us to make wget wait for random time between&nbsp;consecutive&nbsp;downloads and fooling the server.<br />This option causes the&nbsp;time between requests to vary between 0.5 and 1.5 * wait seconds,where wait was specified using the --wait option, in order to mask&nbsp;Wget's presence from such analysis.<br /><div><br /></div><div><span class="Apple-style-span" style="color: #6aa84f;"><b>Unleash the power of Google</b></span><br /><span class="Apple-style-span" style="color: #6aa84f;"><b><br /></b></span></div>Google too has a syntax like *nix commands, which can be used for finding desired results from over billions of pages on Internet. We can get just what we want if we use it smartly. Here we want a pure list of downloadable files, which we can download with wget. Just enter this string in Google Search Bar and hit enter:</div><div><blockquote><i>intitle:"index of/" mp3 "your favorite band" parent directory</i></blockquote>This will give links to pages which only have links to mp3 files of your favorite band ready to download. This link can be passed to wget for a recursive download with required recursion depth to&nbsp;successfully&nbsp;get what we want. Tinker with above search string to get other kind of stuff, may be videos, ebooks or whatever.<br />(This is meant for educational purposes only. Downloading this way is not legal. Use at your own risk... :P)<br /><br />Wget has much more than this. Refer to wget manual pages for more advanced and&nbsp;insight&nbsp;information.<br />HAPPY HACKING... :D<br /><br /><hr style="text-align: justify;" /><div style="text-align: justify;"><br /></div><div style="text-align: justify;"><b><i>Circle Beat Of The Geek on</i></b>&nbsp;<a href="https://plus.google.com/109838896781876000861" target="_blank">Google Plus</a></div><div style="text-align: justify;"><i><b>OR Like us on</b></i>&nbsp;<a href="https://www.facebook.com/pages/Beat-Of-The-Geek/251813454834549" target="_blank">Facebook</a>&nbsp;<b><i>&nbsp;OR Follow on</i></b>&nbsp;<a href="https://twitter.com/#!/beatofthegeek" target="_blank">Twitter</a></div></div></div></div></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Aptoncd Tutorial:How to backup your installed software on Ubuntu using Aptoncd]]></title>
    <link href="http://\.github.io/\/github/2011/07/aptoncd-tutorialhow-to-backup-your.html"/>
    <updated>2011-07-09T00:00:00+05:30</updated>
    <id>http://\.github.io/\/github/2011/07/aptoncd-tutorialhow-to-backup-your</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on"><div class="separator" style="clear: both; text-align: center;"><a href="http://2.bp.blogspot.com/-T4ZHztqzWSI/ThcS3OqiDWI/AAAAAAAAACM/oW2x1h-WFEg/s1600/Screenshot-APTonCD.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"><img border="0" height="182" src="http://2.bp.blogspot.com/-T4ZHztqzWSI/ThcS3OqiDWI/AAAAAAAAACM/oW2x1h-WFEg/s200/Screenshot-APTonCD.png" width="200" /></a></div>Being a distro hopper, I keep changing my desktop Operating System frequently, and it is really irritating when I have to download and install same software every time (it take a lot of time on my slow Internet connection). Aptoncd save me from this trouble by backing up all the software I've installed using apt-get (or other apt-get front ends like aptitude, synaptic etc.), to a CD/DVD which I can install when I re-install &nbsp;my Operating System. What aptoncd actually do is that it copies all the software present in apt archives and burn them into a .iso file. It can also make meta packages which binds software and their dependencies into one package simplifying their installation.<br />Aptoncd comes inbuilt with Linux Mint and can be installed on your Ubuntu machine using command:<br />&nbsp;<code><span class="Apple-style-span" style="color: #6aa84f;">&nbsp;<b>sudo apt-get install aptoncd</b></span></code><br />Once downloaded and installed, aptoncd can be accessed through its GUI interface (which is nice enough to get an admiration from command line geeks (including me)). So overall, what we have to do after its installation is this:<br /><!-- more --><br /><br /><span class="Apple-style-span" style="color: #6aa84f; font-size: large;">&nbsp; &nbsp; &nbsp; &nbsp;Start Aptoncd:</span><br /><br /><ol><a href="http://4.bp.blogspot.com/-er3-mhFk2hg/ThcQcg0aB6I/AAAAAAAAACI/Pw91ltWREP4/s1600/Screenshot.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"><img border="0" height="183" src="http://4.bp.blogspot.com/-er3-mhFk2hg/ThcQcg0aB6I/AAAAAAAAACI/Pw91ltWREP4/s200/Screenshot.png" width="200" /></a><li>Open Aptoncd from main menu of your OS, or simply type <code><span class="Apple-style-span" style="color: #6aa84f;">aptoncd</span></code> in terminal.</li><li>Click on "Create" button when the aptoncd window appear.</li><li>It will itself scan all the software present in your archives (that you've downloaded and installed using apt-get or something).<br /><span class="Apple-style-span" style="color: #6aa84f; font-size: large;">Add extra software:<br /></span></li><li>You can also add software manually downloaded which you want to be the part of your apt backup disk by clicking on add button. This can add a single package (.deb file) or multiple <br />packages present in a folder.</li><li>Aptoncd allow you to include specific software of your choice and will automatically include their dependencies. This is a very handy and useful option.</li><li>Aptoncd also check if two versions of same software are available and itself include only the latest one (you can change it though).<br /><br /><span class="Apple-style-span" style="color: #6aa84f; font-size: large;">Make iso image:</span></li><li>Once everything is done make the iso file by clicking on "Burn" button. Make sure "Make meta packages" option is ticked (it is very useful option for binding software and dependencies into single package).</li><li>At this stage you can chose to make one DVD or one or more CDs.</li><li>Once iso image in made, Aptoncd prompts you to burn it to CD/DVD. You can click no if you want to manually burn it later and copy the iso image from your Home folder.<br /><br /><span class="Apple-style-span" style="color: #6aa84f; font-size: large;">Restoring to another machine:</span></li><li>Once you have burnt the iso image on CD/DVD, it can be carried to another PC.&nbsp;</li><li>When disk in the disk drive, run AptonCD and chose "restore" option.<br /><br /><span class="Apple-style-span" style="color: #6aa84f; font-size: large;">Restoring from USB:</span></li><li>In case you don't want to burn the iso file to disk, it can also be restored from USB or other media. For this chose "Load" option after chosing restore option and point to the location where your file is located.(This option didn't work for Ubuntu 11.04 and Mint 11 though, but it do work with previous versions).<br /></li><li>Restoring using Aptoncd do not install any software, it just save them in archives directory. You have to manually install them.<br /><br /><span class="Apple-style-span" style="color: #6aa84f; font-size: large;">Installing&nbsp;restored&nbsp;Software :</span></li><li>We can install restored software with "apt-get install" command. Just type:<br /><code><span class="Apple-style-span" style="color: #93c47d;"><b> sudo apt-get install "your package name"</b></span></code><br />and as apt-get will look in its archives before downloading it, your software will get installed.</li><li>In case you want to install all the software restored, this can be done with a single command;<br /><code><span class="Apple-style-span" style="color: #6aa84f;"><b>sudo dpkg -i /var/cache/apt/archives/*.deb</b></span></code><br />Thanks to "make meta packages" option.<br /><br /><span class="Apple-style-span" style="color: #6aa84f; font-size: large;">In case Aptoncd is not installed on 'Other machine':</span></li><li>In case you want to install software on other machine where Aptoncd is not installed, it can be done using Synaptic.</li><li>Just extract all packages to your hard disk (or USB) and chose "Add downloaded software" from Synaptic menu. It will install them all. <a href="http://channikhabra.blogspot.com/2011/07/manually-copy-softwaredeb-files-from.html#Synaptic">(See this for help)</a></li></ol>This is a very simple tut of even simpler app. If you have any problem or I have written something wrong or missed something, please don't hesitate to mention. After all, everyone loves comments (me too).<br /><br /><hr \="" style="text-align: justify;" /><div style="text-align: justify;"><br /></div><div style="text-align: justify;"><b><i>Circle Beat Of The Geek on</i></b>&nbsp;<a href="https://plus.google.com/109838896781876000861" target="_blank">Google Plus</a></div><div style="text-align: justify;"><i><b>OR Like us on</b></i>&nbsp;<a href="https://www.facebook.com/pages/Beat-Of-The-Geek/251813454834549" target="_blank">Facebook</a>&nbsp;<b><i>&nbsp;OR Follow on</i></b>&nbsp;<a href="https://twitter.com/#!/beatofthegeek" target="_blank">Twitter</a></div><br /><ol></ol></div></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Manually copy software(.deb files) from apt-get archives for future installs/backup]]></title>
    <link href="http://\.github.io/\/github/2011/07/manually-copy-softwaredeb-files-from.html"/>
    <updated>2011-07-08T00:00:00+05:30</updated>
    <id>http://\.github.io/\/github/2011/07/manually-copy-softwaredeb-files-from</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on"><div style="text-align: left;"><div><h1><span class="Apple-style-span" style="font-size: small; font-weight: normal;"><em>Only for Debian based distros; Ubuntu, Mint etc.</em></span></h1><h1><span class="Apple-style-span" style="font-size: small; font-weight: normal;">It is easy (and yes, possible as well) to copy software which are installed using apt-get\aptitude\synaptic etc. and save them for future install on other computer or just for backup. For this do the following:</span></h1><ul style="text-align: left;"><li>You need to be root to copy files from archives, so start a root session of nautilus<i>.</i>&nbsp;Open the terminal and type<br /><span class="Apple-style-span"><code></code></span><code><span class="Apple-style-span" style="color: #274e13;">sudo nautilus</span>&nbsp;</code><br />and then enter password when prompted.</li><li>A nautilus window will open up (don't panic. it is just your file manager). Navigate to /var/cache/apt/archives/<!-- more --></li><li>Here saved are all the files which are installed using apt-get or another package manager which use apt-get at back (aptitude, synaptic). Locate the software you are interested in (.deb files).</li><li>Copy .deb files on a USB or any other place and carry them to offline computer.</li><li><span class="Apple-style-span" style="color: #990000;">I highly recommend to <b>copy all the .deb files available in .../archives directory </b>even if you don't need them since every software depend on a lot of dependencies which are difficult to locate manually.</span></li><li>On the offline machine, again open the root session of nautilus (<code>sudo nautilus</code>).</li></ul></div><div style="text-align: left;"><span class="Apple-style-span" style="color: #6aa84f;"><span class="Apple-style-span" style="font-size: large;">Installing on Offline Machine&nbsp;</span><span class="Apple-style-span" style="font-size: large;">»</span></span><br /><span class="Apple-style-span" style="color: #660000; font-size: large;">Can be done this way</span><span class="Apple-style-span" style="font-size: large;"> <span class="Apple-style-span" style="color: red;">»</span></span></div><ul style="text-align: left;"><li>Copy and paste all the .deb files from USB stick (or whatever media you used) to /var/cache/apt/archives/ directory (you need to use 'sudo nautilus' for this).</li><li>When everything is done, close nautilus.</li><li>In the Terminal window (ctrl+T), type<br /><code>sudo apt-get install "your package name"</code></li><li>Apt-get look for a package in archives first and try to download it only if it is not present there. So in any case, this method must work perfectly.</li></ul><a href="http://www.blogger.com/post-edit.g?blogID=3664370465667971076&amp;postID=3082173511827674230" name="Synaptic"></a><br /><span class="Apple-style-span" style="color: #274e13; font-size: large;">Recommended way:</span><span class="Apple-style-span" style="color: #6aa84f; font-size: large;"> »</span></div><div style="text-align: left;"><ul style="text-align: left;"><li>Copy all files from USB stick to hard drive (not necessary).</li><li>Open <b>Synaptic package manager</b> (inbuilt in Ubuntu).</li><li>Select "Add Downloaded software" from File menu.</li><li>Navigate to location where you copied your software (or USB/CD containing it).</li><li>Synaptic will install them without any problem</li></ul></div><div style="text-align: left;"><ul style="text-align: left;"></ul><span class="Apple-style-span" style="color: #990000;">Precautions:</span></div><div style="text-align: left;"><ul style="text-align: left;"><a href="http://4.bp.blogspot.com/-om7W-momaps/ThMWBcYhlBI/AAAAAAAAAB8/HhnTQlIQ3cI/s1600/Screenshot.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"><img border="0" height="257" src="http://4.bp.blogspot.com/-om7W-momaps/ThMWBcYhlBI/AAAAAAAAAB8/HhnTQlIQ3cI/s320/Screenshot.png" width="320" /></a><li>Take care that the architectures of both the computers involved in this process are same i.e. both run either 32 bit or 64 bit versions of the OS.</li><li>When running nautilus with root privileges, take care that you don't delete or change anything just because your genius mind think it is useless.</li><li>It is&nbsp;recommended&nbsp;that both the computer run same version of OS, it is not necessary though.</li></ul>Although it is possible to transfer software with this method, but it involves a lot of manual work. If you are a lazy junk (like me :P ), software like Aptoncd are available to automate this process and they do it very well.<br /><br /><hr \="" style="text-align: justify;" /><div style="text-align: justify;"><br /></div><div style="text-align: justify;"><b><i>Circle Beat Of The Geek on</i></b>&nbsp;<a href="https://plus.google.com/109838896781876000861" target="_blank">Google Plus</a></div><div style="text-align: justify;"><i><b>OR Like us on</b></i>&nbsp;<a href="https://www.facebook.com/pages/Beat-Of-The-Geek/251813454834549" target="_blank">Facebook</a>&nbsp;<b><i>&nbsp;OR Follow on</i></b>&nbsp;<a href="https://twitter.com/#!/beatofthegeek" target="_blank">Twitter</a></div></div></div></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to use Linux:Problems you'll face using Linux offline and Solutions]]></title>
    <link href="http://\.github.io/\/github/2011/07/why-not-to-install-linux-offline-and.html"/>
    <updated>2011-07-02T00:00:00+05:30</updated>
    <id>http://\.github.io/\/github/2011/07/why-not-to-install-linux-offline-and</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on"><h2><span class="Apple-style-span" style="font-size: small;"><em><span class="Apple-style-span" style="font-weight: normal;">Hate theory? Go straight to </span></em></span><span class="Apple-style-span" style="font-size: small;"><em><a href="http://channikhabra.blogspot.com/2011/07/why-not-to-install-linux-offline-and.html#solution" style="font-weight: normal;">solutions</a></em></span></h2><h2></h2><h2></h2><div dir="ltr" style="text-align: left;" trbidi="on"><div style="text-align: left;"><a href="http://4.bp.blogspot.com/-mByb2f4nP24/ThMXRkBZGzI/AAAAAAAAACA/hAo-c-unnh8/s1600/5303243-angry-computer.jpg" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"><img border="0" height="200" src="http://4.bp.blogspot.com/-mByb2f4nP24/ThMXRkBZGzI/AAAAAAAAACA/hAo-c-unnh8/s200/5303243-angry-computer.jpg" width="187" /></a>Using Linux Operating System can be a real headache for early beginners when they are not connected to Internet. So I am writing this article covering major problems faced when one has to install software on an offline Linux machine and solutions to them.<br />When I first met Linux, thing I was screaming for was, where to find the setups of software. As I used to do in Windows, downloading and saving software setups for future installs is quite handy than downloading it&nbsp;every time. But it is hard to do this in Linux for a number of reasons.<br /><br /></div><ol style="text-align: left;"><li>Many so called user-friendly Linux Distributions like Ubuntu come without software people (new to Linux) expect preinstalled e.g. Ubuntu come without mp3 plugins and other codecs. So when offline, it is really irritating when one can't even play his/her favorite music. These include a large number of files which are hard to fetch manually.<a name='more'></a><!-- more --></li><li><b>Most software are available as source-codes packages</b> on their websites to download and not in binaries.&nbsp;</li><li>Even when it is possible to download .deb/.rpm packages and install them, as Linux uses a shared library system, most packages have lots of dependencies which have to be built and installed before main software. <b>Downloading and building all the dependencies and main software in right order can be a real headache</b> at times.</li><li><b>Source codes are tough to compile</b>&nbsp;for novices and if even they can compile, uninstalled dependencies come in the way.</li></ol><span style="color: #87a34d;"></span><br /><h2><a href="http://www.blogger.com/post-edit.g?blogID=3664370465667971076&amp;postID=6696719326036529595" name="solution"></a><br /><span style="color: #87a34d;">How to install software on an Offline Linux machine:</span></h2><br />Solutions here are focused on Debian based Linux Operating Systems like Ubuntu and other Debian/Ubuntu derivatives.<br /><br /><b>The main idea is to install or download software on a machine connected to internet and then somehow carry them to the offline computer</b>. Package managers of GNU/Linux distributions like apt-get do a very nice job of downloading and installing software '<b>with'</b> their dependencies, and we are going to use their power for our purpose (installing software on offline Linux machine).<br /><div style="text-align: left;"></div><b></b><br /><ol style="text-align: left;"><li><b><span class="Apple-style-span" style="font-weight: normal;"><b><span class="Apple-style-span" style="color: #6aa84f;"><a href="http://channikhabra.blogspot.com/2011/07/manually-copy-softwaredeb-files-from.html">Manually copying software installed using apt-get:</a></span> </b></span><span class="Apple-style-span" style="font-weight: normal;">Software installed on a system through apt-get, aptitude or synaptic etc are saved on hard disk.&nbsp;This method involve manually copy them and installing them on offline machine. However this method is </span><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="color: #cc0000;">not recommended for novices</span></span><span class="Apple-style-span" style="font-weight: normal;">.<br /><span class="Apple-style-span" style="border-collapse: collapse; font-family: Arial, Verdana, sans-serif; font-size: 12px; line-height: 21px;"><span class="Apple-style-span" style="background-color: white; color: #6aa84f;">⇒</span>&nbsp;&nbsp;</span>Install software on Linux system connected to Internet.<br /><span class="Apple-style-span" style="border-collapse: collapse; font-family: Arial, Verdana, sans-serif; font-size: 12px; line-height: 21px;"><span class="Apple-style-span" style="color: #6aa84f;">⇒</span>&nbsp;</span>Copy software from apt archives ( var/cache/apt/archives ) to usb drive etc.<br /><span class="Apple-style-span" style="border-collapse: collapse; font-family: Arial, Verdana, sans-serif; font-size: 12px; line-height: 21px;"><span class="Apple-style-span" style="color: #6aa84f;">⇒</span>&nbsp;</span>Carry software on offline machine and paste them there.<br /></span><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="border-collapse: collapse; font-family: Arial, Verdana, sans-serif; font-size: 12px; line-height: 21px;"><span class="Apple-style-span" style="color: #6aa84f;">⇒</span>&nbsp;</span>Install software using packet managers ( Synaptic recommended).<br /></span></b></li><li><span class="Apple-style-span" style="font-weight: normal;"><b><span class="Apple-style-span" style="color: #6aa84f;"><a href="http://channikhabra.blogspot.com/2011/07/aptoncd-tutorialhow-to-backup-your.html">Using Aptoncd:</a></span> </b></span><span class="Apple-style-span" style="font-weight: normal;">Aptoncd is a software developed for automating above stated process of backing up software downloaded and installed &nbsp;using apt-get, and it do this job very well. It is a very nice software with nice GUI interface and </span><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="color: #38761d;">easy to use for beginners</span></span><span class="Apple-style-span">.<br /><b><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="border-collapse: collapse; font-family: Arial, Verdana, sans-serif; font-size: 12px; line-height: 21px;"><span class="Apple-style-span" style="color: #6aa84f;">⇒</span>&nbsp;</span></span></b>Open Aptoncd<br /><b><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="border-collapse: collapse; font-family: Arial, Verdana, sans-serif; font-size: 12px; line-height: 21px;"><span class="Apple-style-span" style="color: #6aa84f;">⇒</span>&nbsp;</span></span></b>Create iso image of apt archives directory<br /><b><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="border-collapse: collapse; font-family: Arial, Verdana, sans-serif; font-size: 12px; line-height: 21px;"><span class="Apple-style-span" style="color: #6aa84f;">⇒</span>&nbsp;</span></span></b>Burn it to CD/DVD<br /><b><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="border-collapse: collapse; font-family: Arial, Verdana, sans-serif; font-size: 12px; line-height: 21px;"><span class="Apple-style-span" style="color: #6aa84f;">⇒</span>&nbsp;</span></span></b>Restore to offline computer<br /><b><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="border-collapse: collapse; color: #6aa84f; font-family: Arial, Verdana, sans-serif; font-size: 12px; line-height: 21px;">⇒</span></span></b>Install all packages using one command<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<code>sudo dpkg -i /var/cache/apt/archieves/*.deb</code><br />&nbsp; &nbsp;</span></li><li style="font-weight: bold;"><span class="Apple-style-span" style="font-weight: normal;"><b><span class="Apple-style-span" style="color: #6aa84f;"><a href="http://channikhabra.blogspot.com/2011/07/keryx-tutorial-download-software-for.html">Using Keryx:</a></span> </b></span><span class="Apple-style-span" style="font-weight: normal;">Keryx is a portable, cross platform offline package manager for Debian based Linux distributions (Ubuntu and derivatives). It works on a different principle. Keryx Download software on computer connected to internet (it may be on Linux or Windows) and then install them to offline PC.<br /><b><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="border-collapse: collapse; color: #6aa84f; font-family: Arial, Verdana, sans-serif; font-size: 12px; line-height: 21px;">⇒&nbsp;</span></span></b>Extract Keryx to a USB drive<br /><b><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="border-collapse: collapse; color: #6aa84f; font-family: Arial, Verdana, sans-serif; font-size: 12px; line-height: 21px;">⇒&nbsp;</span></span></b></span><span class="Apple-style-span" style="font-weight: normal;">First run&nbsp;Keryx&nbsp;on the offline Linux machine where it make a profile about the Linux &nbsp;Distribution and software installed on it.<br /><b><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="border-collapse: collapse; color: #6aa84f; font-family: Arial, Verdana, sans-serif; font-size: 12px; line-height: 21px;">⇒&nbsp;</span></span></b>Then run it on Computer with Internet connection (it may be Windows or Linux) where you &nbsp;can select and download software.<br />This method is&nbsp;</span><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="color: #38761d;">highly recommended for novices/ beginners</span></span><span class="Apple-style-span" style="font-weight: normal;"> as it involve very little manual work. Read complete Keryx tutorial here.<br /></span></li><li><span class="Apple-style-span" style="font-weight: normal;"><b><span class="Apple-style-span" style="color: #6aa84f;"><a href="http://channikhabra.blogspot.com/2011/07/how-to-create-bootabe-cddvd-from.html">Using Remastersys\Create Custom Live disk</a>:</span></b></span><span class="Apple-style-span" style="font-weight: normal;">&nbsp;This is my&nbsp;favorite method for backups as I frequently reinstall my Operating System(s) ( I have my reasons). This method involve using a script called Remastersys for making a bootable disk from a system already installed with Debian/Ubuntu/derivatives. In this process all the software installed on the machine also get included in the disk prepared with Remastersys. </span><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="color: #38761d;">This is a brilliant method highly recommended for novices</span></span><span class="Apple-style-span">.<br /><b style="font-weight: normal;"><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="border-collapse: collapse; color: #6aa84f; font-family: Arial, Verdana, sans-serif; font-size: 12px; line-height: 21px;">⇒&nbsp;</span></span></b>Run Remastersys GUI<br /><b style="font-weight: normal;"><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="border-collapse: collapse; color: #6aa84f; font-family: Arial, Verdana, sans-serif; font-size: 12px; line-height: 21px;">⇒&nbsp;</span></span></b>Follow the instructions (choose dist option)<br /><b style="font-weight: normal;"><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="border-collapse: collapse; color: #6aa84f; font-family: Arial, Verdana, sans-serif; font-size: 12px; line-height: 21px;">⇒&nbsp;</span></span></b>Copy iso image of your custom Live CD/DVD from /usr/home/remastersys/remastersys<br /><b style="font-weight: normal;"><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="border-collapse: collapse; color: #6aa84f; font-family: Arial, Verdana, sans-serif; font-size: 12px; line-height: 21px;">⇒&nbsp;</span></span></b>Burn it to disk or make a live USB using Unetbootin<br /><b style="font-weight: normal;"><span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="border-collapse: collapse; color: #6aa84f; font-family: Arial, Verdana, sans-serif; font-size: 12px; line-height: 21px;">⇒&nbsp;</span></span></b></span>I<span class="Apple-style-span">nstall newly born custom Linux Distribution to offline PC&nbsp;</span></li></ol>But as with everything in life, all solutions have their own cons, pros and side effects. It is recommended to read each their tutorials (follow given links) for details.<br />If I am missing something here, or something I have written wrong, suggestions are more than welcome.<br /><br /><hr \="" style="text-align: justify;" /><div style="text-align: justify;"><br /></div><div style="text-align: justify;"><b><i>Circle Beat Of The Geek on</i></b>&nbsp;<a href="https://plus.google.com/109838896781876000861" target="_blank">Google Plus</a></div><div style="text-align: justify;"><i><b>OR Like us on</b></i>&nbsp;<a href="https://www.facebook.com/pages/Beat-Of-The-Geek/251813454834549" target="_blank">Facebook</a>&nbsp;<b><i>&nbsp;OR Follow on</i></b>&nbsp;<a href="https://twitter.com/#!/beatofthegeek" target="_blank">Twitter</a></div></div></div></div>

]]></content>
  </entry>
  
</feed>

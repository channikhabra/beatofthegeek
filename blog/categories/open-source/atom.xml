<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: open-source | Beat of The Geek]]></title>
  <link href="http://beatofthegeek.com/blog/categories/open-source/atom.xml" rel="self"/>
  <link href="http://beatofthegeek.com/"/>
  <updated>2014-02-20T17:47:08+05:30</updated>
  <id>http://beatofthegeek.com/</id>
  <author>
    <name><![CDATA[Charanjit Singh]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[The awesome of web browsing with Emacs]]></title>
    <link href="http://beatofthegeek.com/2014/02/the-awesome-of-web-browsing-with-emacs.html"/>
    <updated>2014-02-19T00:00:00+05:30</updated>
    <id>http://beatofthegeek.com/2014/02/the-awesome-of-web-browsing-with-emacs</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on">Emacs is awesome. There is a kinda steep learning curve for new comers, which I think is the reason it's not popular among most new-techies. But once you've got over that, it's all hugs and kisses. <br /><br />Emacs is addictive. You get addicted to it. Addicted to its power, to its flexibility, and if nothing else, it's keyboard shortcuts. This addiction result in browser extensions like <a href="https://addons.mozilla.org/en-US/firefox/addon/firemacs/" target="_blank">firemacs</a> ), (you should definitely try it if you are an emacs user), which adds emacs shortcuts to Firefox (another awesome piece of technology).<br /><br /><!-- more --><br /><br />But there is another level of addiction. When you want to do everything you do on computer from within Emacs. And Emacs won't complaint, or get in your way. It's a freaking <a href="http://c2.com/cgi/wiki?EmacsAsOperatingSystem" target="_blank">operating system in itself</a>. People are <a href="http://www.informatimago.com/linux/emacs-on-user-mode-linux.html" target="_blank">doing crazy things with it</a>. <br /><br />I am here to share my experience of using Emacs as my primary web browser for quite some time now.<br /><br />For about a month, I am in a situation in which I am on very expensive (for my unemployed soul) Internet connection, and can't afford to waste any bandwidth. Every MB matters. Firefox was consuming a lot of bandwidth for downloading all those images, js, and css I don't care about most of the time. All I wanted from Internet was text. So I turned towards command line web-browsers. By instinct I looked for <a href="http://www.google.com/search?btnI=I%%27m+Feeling+Lucky&amp;ie=UTF-8&amp;oe=UTF-8&amp;q=Emacs+as+a+web+browser" target="_blank">options in Emacs as a web browser</a>. There are many. I chose <a href="http://emacs-w3m.namazu.org/" target="_blank">emacs-w3m</a>.<br /><br />Now I am fond of it. Many good things I've got out of using emacs as my web browser.<br /><br /><h3 style="text-align: left;">It feels good</h3><div style="text-align: left;">It feels great actually. I don't know what it is there in it, but using Emacs feels like being at home. An easy and relaxed feeling. I am a knowledge hungry maniac, so the ability to browser information, and summarize and store it from within the same familiar ecosystem added another level of ease. This kind of mental ease really matter when throw all sort of <a href="https://github.com/gulpjs/gulp" target="_blank">new technologies</a> on yourself everyday.</div><div style="text-align: left;"><br /></div><h3 style="text-align: left;">Distraction free</h3><div style="text-align: left;">I feel it much more focused when reading text in Emacs. I realized it first time while reading emacs-lisp-intro, <a href="http://channikhabra.github.io/2013/10/11/the-most-beautiful-tutorial/" target="_blank">the most beautiful tutorial</a> ever imo. I think there are two main reason for this. </div><div style="text-align: left;"><br />First is the absence of all those fancy graphics (images, fonts, styles etc) that you awe on modern web pages. If you are actually after the information, believe me you won't miss an ounce of them. </div><div style="text-align: left;"><br />Second reason I think is the habit. My mind is trained to focus on code (that's what we use Emacs for, remember?) in Emacs. It might be the environment that increase the focus level by magnitude when am reading something inside Emacs. </div><div style="text-align: left;"><br /></div><h3 style="text-align: left;">Ad blocking by default</h3><div style="text-align: left;">That's obvious. No Javascript, no images, No ads. No need to install ad-block plus and feel bad for publishers. Please note that this certainly does not mean that you can't view images in Emacs. It's an opt-in option in emacs-w3m (which of course can be toggled globally to display images by default).</div><div style="text-align: left;"><br /></div><h3 style="text-align: left;">It made me a Better Blogger</h3><div style="text-align: left;">I like writing. I have been running this blog since 2011, but wrote like 10 posts in 2 years. It started changing when I started using org-mode in Emacs for taking notes about literally everything. And web browsing from within Emacs made it even easier to write. For a pro-level procrastinator like me, even a press of `alt+Tab` is enough of an excuse to not write. </div><div style="text-align: left;"><br />I believe it is not pressing `alt+Tab`. It's change of context that happen when switching windows (Firefox to Emacs). Many things flush out of head when I actually reach to Emacs from Firefox. It got resolved with using Emacs as web browser. </div><div style="text-align: left;"><br />It also boosted my habit of note making. A simple `C-x 3` and `C-x o` made a lot of difference.</div><div style="text-align: left;"><br />Actually I believe it's <a href="http://orgmode.org/" target="_blank">org-mode</a> which is responsible for my better blogging habits. Earlier I had to sit down and start writing a post; now I switch to my notes.org and search for which of the org nodes can be turned into blog posts. emacs-w3m sure increased the size of my notes file though.</div><div style="text-align: left;">Please also read about <a href="http://www.beatofthegeek.com/2014/02/my-setup-for-using-emacs-as-web-browser.html" target="_blank">my setup for using emacs as web browser</a>.</div></div></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git commit illustrated: Simplicity revealed by a complex exercise for simplest git task]]></title>
    <link href="http://beatofthegeek.com/2014/01/git-commit-illustrated-simplicity.html"/>
    <updated>2014-01-10T00:00:00+05:30</updated>
    <id>http://beatofthegeek.com/2014/01/git-commit-illustrated-simplicity</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on"><div class="separator" style="clear: both; text-align: center;"><a href="http://4.bp.blogspot.com/-2hJwSV2bj7I/Us-k_1d6bnI/AAAAAAAAAlQ/FplZr00hLCk/s1600/46.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://4.bp.blogspot.com/-2hJwSV2bj7I/Us-k_1d6bnI/AAAAAAAAAlQ/FplZr00hLCk/s1600/46.png" height="236" width="400" /></a></div>In this post I will try to explain the underlying commands and to a level the internal working of the git system involved when making a 'commit'.<br />This post is actually the by-product of my research for another post about git (.git/ actually).  I was so much astonished by the amount of myths about complexity of git system removed from my mind, that I decided to make it the today's post itself. To me the git system appears much simple now than yesterday.<br /><h3 style="text-align: left;">Commit </h3>Commit is the central piece of the git system. The git world is simply a collection of commit objects, each of which hold a tree, which hold references to other trees and blobs. The branches, the tags, the HEAD are just fancy aliases for commits (more on these in some other post (next may be)).<br />A commit is basically the snapshot of present working tree. I will spare the details  for a future post (it's worth it).<br /><br />Let's now discuss what this post is about. Revealing the secrets involved in every git users ritual of 'commit'ing, and performing a commit manually.<br /><br /><!-- more -->This should reveal quite some details about the internal working of git (no you don't need to run away, it's not that deep).<br /><br />You might already know the concepts, but knowing sex and having sex are kind of different things.<br /><br />Ok! Let's start the <b>exercise for manual commit</b>.<br /><br />First we need to create an empty directory, call it 'work'. And some simple file in it.<br /><blockquote class="tr_bq">=&gt; mkdir work<br />=&gt; echo "Hello world!" &gt; hello_world</blockquote>Initiate a git repo in it and add the 'hello_world' file<br /><blockquote class="tr_bq">=&gt; git init</blockquote>We will keep an eye on the changes that happen in the '.git' repo throughout our exercise. For now check out what's saved in the HEAD.<br /><blockquote class="tr_bq">=&gt; cat .git/HEAD<br />=&gt; ref: refs/heads/master</blockquote>As HEAD is basically just a reference to the commit which represents the current commit associated with the working tree. So one might guess .git/refs/heads/master would point to the tip of a branch. Let's check it <br /><blockquote class="tr_bq">=&gt; ls .git/refs/heads/master<br />=&gt; <br />=&gt; git branch<br />=&gt;</blockquote>There is nothing in there. Since we have not committed any commits yet, there are no branches (since branches are merely named commits which happen to have multiple child commits).<br />If you are feeling adventurous, you can try 'git log'.<br /><blockquote class="tr_bq">=&gt; git log<br />=&gt; fatal: bad default revision 'HEAD'</blockquote>Let's now <b>add our file to the staging area</b><br /><blockquote class="tr_bq">=&gt; git add hello_world</blockquote><blockquote class="tr_bq"><b>Staging area is the middle system which keeps our content after 'git add' and before 'git commit'</b></blockquote><blockquote class="tr_bq">&nbsp;<b>A blob is the git's representation of a file. It's not actually a file, but just the content. A blob do not have any name or other metadata. It's referenced in trees which contain metadata for blobs.<br />Tree is the object which stores references to other trees and blobs as leaf nodes.</b></blockquote>This command converted content of 'hello_world' file into a blob and placed it in the index (aka staging area). A 'blob' is how our content is represented in git. You can check the .git dir, a new file 'index' is created. This file contain the references to all blobs and trees which get added to our staging area.<br /><blockquote class="tr_bq">=&gt; ls .git<br />=&gt; branches&nbsp; config&nbsp; description&nbsp; HEAD&nbsp; hooks *index*&nbsp; info&nbsp; objects&nbsp; refs</blockquote>At this point we would generally just 'commit' the 'index', but not this time. The 'git commit' command hides many details and is a great convenience. You'll value it after this exercise.<br /><br />Git store all our content in form of blobs. The blobs do not have any kind of meta-data attached with them (like name, creation date or something). They are just nameless 'blobs'. To identify a blob, they are saved in 'trees' as leaf nodes. Different trees can save reference to same blob with different meta-data attached. But a git repository will have exactly one copy of a blob. This is the reason of compact storage of git.<br /><br />We can see the blob for our content in 'hello world' present in staging area (index)<br /><blockquote class="tr_bq">=&gt; git ls-files --stage<br />=&gt; 100644 802992c4220de19a90767f3000a79a31b98d0df7 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; hello_world</blockquote>If you entered the same content as me, both your and my hashes should be same. We can check what type of object the above hash belong to<br /><blockquote class="tr_bq">=&gt; git cat-file -t 802992c<br />=&gt; blob</blockquote>The above blob is not referenced by any tree. It's only referenced from .git/index (which store references to objects (blobs and trees) which make up our staging area).<br />&nbsp;A 'commit' object in git holds a single tree. A tree may have references to more trees or blobs. So to 'commit' the above created blob of our content, we need a tree. <br /><br />So we now need to create a tree. <br /><blockquote class="tr_bq">=&gt; git write-tree<br />=&gt; cdbf8e1f00e97366e01cbf2d73f3689a60107686</blockquote>'write-tree' command make a tree with the contents of the 'index'.<br />Now when we have the tree, let's create a commit object with it.<br /><blockquote class="tr_bq">=&gt; echo "Initial commit" | git commit-tree cdbf8e1<br />=&gt; a5a86835ba72e3ca7d5267c68c06c212392f9b7d</blockquote>That's the hash for our commit object. You directly use 'git commit <tree-hash>'. Then the command will wait for the commit message to be entered and 'ctrl-d' for proceeding.</tree-hash><br /><br />So our commit object is ready, and we are done. Right? Not actually. What we have created is called an 'unreachable commit'. <br /><b>An unreachable commit</b> is a commit which do not have any parents and which is not referenced by any of the files in .git/refs/heads/. Such commits are automatically removed by the git system after some time.<br />&nbsp;To make our commit reachable, we need to create a reference in a file in .git/refs/heads. <br /><blockquote class="tr_bq">=&gt; echo a5a86835ba72e3ca7d5267c68c06c212392f9b7d &gt; .git/refs/heads/hello</blockquote>Actually we should instead use the more safe way to update references in git system.<br /><blockquote class="tr_bq">=&gt; git update-refs refs/head/hello a5a86835ba72e3ca7d5267c68c06c212392f9b7d</blockquote>Here if we had used name 'master' instead of 'hello', we could have used 'git log'. But now it's still giving 'fatal:' because the HEAD is referring to 'refs/heads/master' which does not exist.<br /><br />Now try the command 'git branch'.<br /><blockquote class="tr_bq">=&gt; git branch <br />=&gt; hello</blockquote>Here we see what a branch actually is to git. A reference to a 'commit' object.<br />Wait there is more to it. Now when we have created the branch 'hello', we need to make HEAD refer to it. <br /><blockquote class="tr_bq">=&gt; git symbolic-ref HEAD refs/heads/hello</blockquote>This command associated our working tree with the newly created branch/commit of ours. This is what actually happens on a checkout normally.<br />Now we can use 'git log'. If you are using 'zsh' with appropriate theme, at this point the git branch indicator will change form uncommitted 'master' to committed 'hello'.<br /><br />Now we are done. Officially. Git system is this frighteningly simple inside. Hope this was as helpful for you as it was for me. I really enjoyed writing this post.</div></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FOSS in Android: Android app store with all and only FOSS apps (F-droid)]]></title>
    <link href="http://beatofthegeek.com/2013/10/foss-in-android-android-app-store-with.html"/>
    <updated>2013-10-08T00:00:00+05:30</updated>
    <id>http://beatofthegeek.com/2013/10/foss-in-android-android-app-store-with</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on"><span style="font-family: Arial,Helvetica,sans-serif;">Android as Google claims is not a completely open platform. Mozilla has launched their own initiative to provide a completely open-source mobile platform with Firefox OS. I am looking forward for a switch form android when it launches in my place. But Android is not that bad. And for the open source lovers, there is a paradise yet unknown to many. There are a shit load of Android apps open-source and free. I found many of my friends unaware of them, so here I am writing this post. Google play is undoubtedly most prominent source of downloading android apps. Average android user seldom goes out to download apps despite the presence of some other quite trustworthy stores. But we are open source lovers right? And we want all open-source tools. So what do the Android world have to offer to us? It rarely happen on the Google Play store that some open source app make it to the featured list. They get lost in the crowd of all those ‘fancy’ apps.</span><br /><h2 id="fdroid_to_the_rescue"><!-- more --><span style="font-family: Arial,Helvetica,sans-serif; font-size: large;">&nbsp;</span></h2><h2 id="fdroid_to_the_rescue"><span style="font-family: Arial,Helvetica,sans-serif; font-size: large;"><a href="https://f-droid.org/">F-droid to the rescue</a></span></h2><br /><span style="font-family: Arial,Helvetica,sans-serif;">Here’s the awesome. F-droid is a repository of open source software for the Android platform. If it is open source and free (FOSS you call ‘em), you will find it on the F-droid. In their own words</span><br /><blockquote class="tr_bq"><span style="font-family: Arial,Helvetica,sans-serif;">The F-Droid Repository is an easily-installable catalogue of FOSS (Free and Open Source Software) applications for the Android platform. The server contains the details of multiple versions of each application, and the Android client makes it easy to browse, install them onto your device, and keep track of updates.</span></blockquote><span style="font-family: Arial,Helvetica,sans-serif;"><br /></span><span style="font-family: Arial,Helvetica,sans-serif;">You can visit the <a href="https://f-droid.org/">F-Droid website</a> and use their web interface to download apps and then install them on your device, or you can download and install their Android client app (yup! they nailed it). The native client for f-droid is kind of nice. I liked it. It is easy and simple, and no BS, totally no Bullshit. It downloads a list of all the apps in the repository and keeps it offline (don’t worry it’s less than an MB). So you can still browse and check the apps in the repo even when not connected to the mighty Internet. And best of all, you don’t need to register to a Google account to get those apps. They have a pretty nice tutorial and description of features on <a href="https://f-droid.org/">their home page</a>. How can I leave without giving a list of awesome and open apps. So here’s one.</span><br /><h2 id="open_source_android_apps_i_am_using"><span style="font-family: Arial,Helvetica,sans-serif;">&nbsp;</span></h2><h2 id="open_source_android_apps_i_am_using" style="text-align: left;"><span style="font-family: Arial,Helvetica,sans-serif; font-size: large;">Open source Android apps I am using</span></h2><h3 id="firefox"><span style="font-family: Arial,Helvetica,sans-serif;">&nbsp;</span></h3><h3 id="firefox"><span style="font-family: Arial,Helvetica,sans-serif;"><a href="https://f-droid.org/repository/browse/?fdcategory%3DInternet&amp;fdid%3Dorg.mozilla.firefox">Firefox</a></span></h3><span style="font-family: Arial,Helvetica,sans-serif;"><br /></span><span style="font-family: Arial,Helvetica,sans-serif;">What else? I know Mozilla people are awesome, I am a big fan of them myself. I don’t know what I can say about the awesome Firefox browser for Android, it’s plane awesome. I was using Dolphin browser prior to firefox, but it’s nowhere close to the awesomeness of Firefox.</span><br /><h3 id="ankidroid"><span style="font-family: Arial,Helvetica,sans-serif;">&nbsp;</span></h3><h3 id="ankidroid"><span style="font-family: Arial,Helvetica,sans-serif;"><a href="https://f-droid.org/repository/browse/?fdid%3Dcom.ichi2.anki&amp;fdpage%3D2">AnkiDroid</a></span></h3><span style="font-family: Arial,Helvetica,sans-serif;"><br /></span><span style="font-family: Arial,Helvetica,sans-serif;">I have literally been a big fan of spaced repetition learning for few months now. It has changed my life upside down (that’s a matter we’ll discuss some other day). It is the second most used app in my phone. Whenever I have a little spare time, I revise my cards. And being an all time learner, I am never short of them.</span><br /><h3 id="mobileorg"><span style="font-family: Arial,Helvetica,sans-serif;">&nbsp;</span></h3><h3 id="mobileorg"><span style="font-family: Arial,Helvetica,sans-serif;"><a href="https://f-droid.org/repository/browse/?fdfilter%3Dmobileorg&amp;fdid%3Dcom.matburt.mobileorg">MobileOrg</a></span></h3><span style="font-family: Arial,Helvetica,sans-serif;"><br /></span><span style="font-family: Arial,Helvetica,sans-serif;">Almost everything character of text I write is from Emacs (sparing the Java/Android apps). All my blog posts/ideas/brain dumps/plans (bla bla bla) are written in org mode. Besides org-mode itself, mobileOrg has been a great companion of mine since I have started following GTD.</span><br /><h3 id="aard"><span style="font-family: Arial,Helvetica,sans-serif;">&nbsp;</span></h3><h3 id="aard"><span style="font-family: Arial,Helvetica,sans-serif;"><a href="https://f-droid.org/repository/browse/?fdid%3Daarddict.android">Aard</a></span></h3><br /><span style="font-family: Arial,Helvetica,sans-serif;">Although I don’t use this one too much, but it’s on my phone. It’s a quite nice offline dictionary. Come handy many times when I get into quarrels with my friends over meaning of words.</span><br /><h3 id="mathdroid"><span style="font-family: Arial,Helvetica,sans-serif;">&nbsp;</span></h3><h3 id="mathdroid"><span style="font-family: Arial,Helvetica,sans-serif;"><a href="https://f-droid.org/repository/browse/?fdfilter%3Dmathdroid&amp;fdid%3Dorg.jessies.mathdroid">Mathdroid</a></span></h3><br /><span style="font-family: Arial,Helvetica,sans-serif;">It’s calculator done right. My phone’s (2.3.3) calculator is an insult to calculators. It lacks many functions which I need on daily bases. Mathdroid do that job. It is a nice simple calculator with many functions.</span><br /><h2 id="honest_review_of_the_fdroid"><span style="font-family: Arial,Helvetica,sans-serif;">&nbsp;</span></h2><h2 id="honest_review_of_the_fdroid" style="text-align: left;"><span style="font-size: x-large;"><span style="font-family: Arial,Helvetica,sans-serif;">Honest Review of the F-droid</span></span></h2><br /><span style="font-family: Arial,Helvetica,sans-serif;">It’s awesome. Because it’s all FOSS (Free and Open Source Software). I love using above apps (and few more I din’t mention) even if there are better closed alternatives. It makes me feel better. But honestly speaking, there’s no glamour. In the games section I couldn’t find any little bit funky game. Same story in most sections. But things will change. For good that is. Open source software are created by freedom lovers and truly generous people. Besides, I am thinking of writing an open source game (Note: I am just thinking :-P). I have a kind of nice concept in mind (which is eating dust in org files like all my other ideas).</span></div></div>

]]></content>
  </entry>
  
</feed>
